{"version":3,"sources":["components/ResetButton.tsx","constants/countToReset.tsx","utils/decimal.tsx","constants/shopContents.tsx","constants/upgrades.tsx","slices/saveSlice.tsx","utils/hooks.tsx","components/shopItem.tsx","components/PlainButton.tsx","constants/tabs.tsx","containers/shop.tsx","containers/upgrades.tsx","containers/options.tsx","components/invItem.tsx","containers/inventory.tsx","utils/array.tsx","Game.tsx","utils/merge.tsx","store.tsx","index.tsx"],"names":["ResetButton","reset","useState","count","setCount","onClick","id","className","D","$","Decimal","shopContents","paramCount","exp","calc","num","add","toString","unlockPrice","price","mul","num1","num2","upgrades","content","pow","action","startingNumber","setStartingNumber","invMax","setInvMax","initialState","inventory","itemBought","Array","length","fill","money","upgrade","saveSlice","createSlice","name","reducers","addNumber","state","push","payload","removeNumberByIndex","splice","buyOrSellShopItem","slice","setMoney","clearClicked","clickedNumber","clickedShop","clickShop","clickNumber","hardReset","localStorage","removeItem","buyUpgrade","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","ShopItem","isOpen","isClicked","cannotClick","PlainButton","split","map","line","i","tabs","tab","dispatch","isBought","save","shopItems","item","index","DecMoney","gt","sub","handleClick","undefined","upgradeBtns","v","InvItem","Inventory","useCallback","includes","shopContent","calcParam","autoUpgrade","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","arr","value","reduce","acc","lt","Game","curTab","setTab","inv","tabNavs","Abc","_handleKeyDown","event","key","document","addEventListener","removeEventListener","moneyToAdd","mergeObject","target","source","isArray","mergeArray","constructor","l","persistedState","JSON","parse","getItem","store","configureStore","reducer","saveReducer","preloadedState","saveInitialState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3af84856.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport { countToReset } from \"../constants/countToReset\";\n\nexport const ResetButton = ({ reset }: { reset(): void }) => {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    if (countToReset - count <= 1) {\n      reset();\n      setCount(0);\n      return;\n    }\n    setCount(count + 1);\n  };\n\n  return (\n    <button onClick={handleClick} id=\"resetButton\" className=\"plainButton\">\n      Press {countToReset - count} more time to <b>HARD RESET</b>\n    </button>\n  );\n};\n","export const countToReset = 5;\n","import Decimal from \"decimal.js\";\n\nexport const D = ($: Decimal.Value) => new Decimal($);\n","// Shop Contents\n\nimport { D } from \"../utils/decimal\";\n\nexport interface IShopContent {\n  paramCount: number;\n  exp: string;\n  calc(...num: string[]): string;\n  unlockPrice: string;\n  price: string;\n}\n\nexport const shopContents: IShopContent[] = [\n  {\n    paramCount: 1,\n    exp: \"x+1\",\n    calc: (num) => D(num).add(1).toString(),\n    unlockPrice: \"0\",\n    price: \"0\",\n  },\n  {\n    paramCount: 1,\n    exp: \"2x\",\n    calc: (num) => D(num).mul(2).toString(),\n    unlockPrice: \"100\",\n    price: \"10\",\n  },\n  {\n    paramCount: 2,\n    exp: \"2x+y\",\n    calc: (num1, num2) => D(num1).mul(2).add(num2).toString(),\n    unlockPrice: \"300\",\n    price: \"40\",\n  },\n  {\n    paramCount: 1,\n    exp: \"3x\",\n    calc: (num) => D(num).mul(3).toString(),\n    unlockPrice: \"2000\",\n    price: \"100\",\n  },\n];\n","import Decimal from \"decimal.js\";\nimport { setInvMax, setStartingNumber, ISaveState } from \"../slices/saveSlice\";\n\nexport interface IUpgrade {\n  count: number;\n  content: string;\n  price(count: number): string;\n  action?(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n}\n\nexport const upgrades: IUpgrade[] = [\n  {\n    count: 4,\n    content: \"Multiply 2 to starting number\",\n    price: (count) =>\n      Decimal.pow(10, count + 1)\n        .mul(10)\n        .toString(),\n    action: (count, { startingNumber }) =>\n      setStartingNumber(Decimal.mul(startingNumber, 2).toString()),\n  },\n  {\n    count: 5,\n    content: \"Expand inventory\",\n    price: (count) => Decimal.pow(1000, count).mul(30).toString(),\n    action: (count, { invMax }) => setInvMax(invMax + 1),\n  },\n  {\n    count: 1,\n    content: \"Auto-select the greatest number\",\n    price: () => \"5000\",\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { upgrades } from \"../constants/upgrades\";\n\nexport interface ISaveState {\n  inventory: string[];\n  invMax: number;\n  itemBought: boolean[];\n  money: string;\n  startingNumber: string;\n  upgrade: number[];\n  clickedShop?: number;\n  clickedNumber?: number[];\n}\n\nexport const initialState = {\n  inventory: [\"1\"],\n  invMax: 5,\n  itemBought: new Array(shopContents.length).fill(false),\n  money: \"0\",\n  startingNumber: \"1\",\n  upgrade: new Array(upgrades.length).fill(0),\n} as ISaveState;\n\nconst saveSlice = createSlice({\n  name: \"save\",\n  initialState,\n  reducers: {\n    addNumber(state, action: PayloadAction<string>) {\n      if (state.invMax > state.inventory.length)\n        state.inventory.push(action.payload);\n    },\n    removeNumberByIndex(state, action: PayloadAction<number>) {\n      if (0 <= action.payload && action.payload < state.invMax)\n        state.inventory.splice(action.payload, 1);\n    },\n    buyOrSellShopItem(state, action: PayloadAction<number>) {\n      state.itemBought[action.payload] = !state.itemBought[action.payload];\n    },\n    setInvMax(state, action: PayloadAction<number>) {\n      state.invMax = action.payload;\n      state.inventory = state.inventory.slice(0, state.invMax);\n    },\n    setMoney(state, action: PayloadAction<string>) {\n      state.money = action.payload;\n    },\n    clearClicked(state, action: PayloadAction) {\n      delete state.clickedNumber;\n      delete state.clickedShop;\n    },\n    clickShop(state, action: PayloadAction<number>) {\n      state.clickedShop = action.payload;\n    },\n    clickNumber(state, action: PayloadAction<number>) {\n      if (!state.clickedNumber) {\n        state.clickedNumber = [];\n      }\n      state.clickedNumber.push(action.payload);\n    },\n    hardReset(state, action: PayloadAction) {\n      state.invMax = initialState.invMax;\n      state.inventory = initialState.inventory;\n      state.itemBought = initialState.itemBought;\n      state.money = initialState.money;\n      state.startingNumber = initialState.startingNumber;\n      state.upgrade = initialState.upgrade;\n      delete state.clickedNumber;\n      delete state.clickedShop;\n      localStorage.removeItem(\"notAMergeGame\");\n    },\n    setStartingNumber(state, action: PayloadAction<string>) {\n      state.startingNumber = action.payload;\n    },\n    buyUpgrade(state, action: PayloadAction<number>) {\n      state.upgrade[action.payload] += 1;\n    },\n  },\n});\n\nexport const {\n  addNumber,\n  removeNumberByIndex,\n  buyOrSellShopItem,\n  setInvMax,\n  setMoney,\n  clearClicked,\n  clickNumber,\n  clickShop,\n  hardReset,\n  setStartingNumber,\n  buyUpgrade,\n} = saveSlice.actions;\n\nexport default saveSlice.reducer;\n","import { useRef, useEffect } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const useInterval = (\n  callback: (...args: any[]) => void,\n  delay: number\n) => {\n  const savedCallback = useRef<typeof callback>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current!();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React from \"react\";\nimport { IShopContent } from \"../constants/shopContents\";\n\nexport const ShopItem = ({\n  content,\n  isOpen,\n  isClicked,\n  cannotClick,\n  onClick,\n}: {\n  content: IShopContent;\n  isOpen: boolean;\n  isClicked: boolean;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`shopItem \n            ${isClicked ? \"clicked\" : \"\"}\n            ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {isOpen ? <span className=\"exp\">{content.exp}</span> : \"\"}\n      {isOpen\n        ? \" - Cost : \" + content.price\n        : content.unlockPrice + \" to unlock\"}\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const PlainButton = ({\n  content,\n  onClick,\n  id,\n  className,\n}: {\n  content: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  id?: string;\n  className?: string;\n}) => {\n  return (\n    <button onClick={onClick} className={`plainButton ${className}`} id={id}>\n      {content.split(\"\\n\").map((line, i) => {\n        return (\n          <span key={i}>\n            {line}\n            <br />\n          </span>\n        );\n      })}\n    </button>\n  );\n};\n","import { Options } from \"../containers/options\";\nimport { Shop } from \"../containers/shop\";\nimport { Upgrades } from \"../containers/upgrades\";\n\n// Tabs\ninterface ITab {\n  name: string;\n  tab: () => JSX.Element;\n}\n\nexport const tabs: ITab[] = [\n  { name: \"shop\", tab: Shop },\n  { name: \"upgrades\", tab: Upgrades },\n  { name: \"option\", tab: Options },\n];\n","import React from \"react\";\nimport { ShopItem } from \"../components/shopItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { setMoney, buyOrSellShopItem, clickShop } from \"../slices/saveSlice\";\nimport { D } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Shop = () => {\n  const dispatch = useAppDispatch();\n\n  const isBought = useAppSelector((state) => state.save.itemBought);\n  const money = useAppSelector((state) => state.save.money);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n\n  function handleClick(index: number) {\n    if (clickedShop) return;\n    const DecMoney = D(money);\n    if (isBought[index]) {\n      const price = D(shopContents[index].price);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(clickShop(index));\n    } else {\n      const price = D(shopContents[index].unlockPrice);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(buyOrSellShopItem(index));\n    }\n  }\n\n  const shopItems = (\n    <div id=\"shopItems\">\n      {shopContents.map((item, index) => {\n        return (\n          <ShopItem\n            content={item}\n            isOpen={isBought[index]}\n            isClicked={index === clickedShop}\n            onClick={() => handleClick(index)}\n            cannotClick={\n              clickedShop !== undefined ||\n              (isBought[index] && D(shopContents[index].price).gt(money)) ||\n              (!isBought[index] && D(shopContents[index].unlockPrice).gt(money))\n            }\n            key={index}></ShopItem>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div id=\"shop\" className=\"tab\">\n      <h3 className=\"title\">Shop - Press Esc to Reset</h3>\n      {shopItems}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { PlainButton } from \"../components/PlainButton\";\nimport { IUpgrade, upgrades } from \"../constants/upgrades\";\nimport { buyUpgrade, setMoney } from \"../slices/saveSlice\";\nimport { D } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Upgrades = () => {\n  const dispatch = useAppDispatch();\n\n  const upgrade = useAppSelector((state) => state.save.upgrade);\n  const money = useAppSelector((state) => state.save.money);\n  const save = useAppSelector((state) => state.save);\n\n  const handleClick = (v: IUpgrade, i: number) => {\n    const price = D(v.price(upgrade[i]));\n    if (price.gt(money)) return;\n    dispatch(setMoney(D(money).sub(price).toString()));\n    dispatch(buyUpgrade(i));\n    if (v.action) dispatch(v.action(upgrade[i], save));\n  };\n\n  const upgradeBtns = upgrades.map((v, i) => {\n    return (\n      <PlainButton\n        content={`${v.content} - ${upgrade[i]}/${v.count}\\nCost : ${v.price(\n          upgrade[i]\n        )}`}\n        onClick={() => handleClick(v, i)}\n        id={\"upgrade\" + i}\n        className={`upgrade ${\n          D(v.price(upgrade[i])).gt(money) || upgrade[i] === v.count\n            ? \"cannotClick\"\n            : \"\"\n        } ${upgrade[i] === v.count ? \"max\" : \"\"}`}\n        key={i}></PlainButton>\n    );\n  });\n\n  return (\n    <div id=\"upgrades\" className=\"tab\">\n      <h3 className=\"title\">Upgrades</h3>\n      <div id=\"upgradesGrid\">{upgradeBtns}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ResetButton } from \"../components/ResetButton\";\nimport { hardReset } from \"../slices/saveSlice\";\nimport { useAppDispatch } from \"../utils/hooks\";\n\nexport const Options = () => {\n  const dispatch = useAppDispatch();\n\n  const reset = () => {\n    dispatch(hardReset());\n  };\n\n  return (\n    <div id=\"options\" className=\"tab\">\n      <h3 className=\"title\">Option</h3>\n      <ResetButton reset={reset}></ResetButton>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const InvItem = ({\n  content,\n  cannotClick,\n  onClick,\n}: {\n  content: string;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`invItem ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { InvItem } from \"../components/invItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addNumber, clearClicked, clickNumber } from \"../slices/saveSlice\";\nimport { max } from \"../utils/array\";\nimport { useAppDispatch, useAppSelector, useInterval } from \"../utils/hooks\";\n\nexport const Inventory = () => {\n  const dispatch = useAppDispatch();\n\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const money = useAppSelector((state) => state.save.money);\n\n  const handleClick = useCallback(\n    (index: number) => {\n      if (\n        clickedShop === undefined ||\n        (clickedNumber !== undefined && clickedNumber.includes(index))\n      )\n        return;\n      const shopContent = shopContents[clickedShop!];\n      if ((clickedNumber?.length ?? 0) + 1 < shopContent.paramCount)\n        return dispatch(clickNumber(index));\n      const calcParam = clickedNumber\n        ? [...clickedNumber, index].map((v) => inventory[v])\n        : [inventory[index]];\n      dispatch(addNumber(shopContent.calc(...calcParam)));\n      dispatch(clearClicked());\n    },\n    [clickedNumber, clickedShop, dispatch, inventory]\n  );\n\n  // Auto-select the greatest number;\n  const autoUpgrade = useAppSelector((state) => state.save.upgrade[2]);\n  useInterval(() => {\n    if (autoUpgrade === 1 && typeof clickedShop !== \"undefined\") {\n      handleClick(max(inventory).index);\n    }\n  }, 1000);\n\n  return (\n    <div id=\"inventory\" className=\"tab\">\n      <h3 className=\"title\">\n        Inventory - {inventory.length} / {invMax}\n      </h3>\n      <h3 id=\"resourceDisplayer\">Money : {money}</h3>\n      <div id=\"invItems\">\n        {inventory.map((item, index) => {\n          return (\n            <InvItem\n              content={item}\n              cannotClick={\n                clickedShop === undefined ||\n                (clickedNumber !== undefined && clickedNumber.includes(index))\n              }\n              onClick={() => handleClick(index)}\n              key={index}></InvItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import Decimal from \"decimal.js\";\nimport { D } from \"./decimal\";\n\nexport const max = (arr: Array<Decimal.Value>) => {\n  if (arr.length === 0) return { index: 0, value: D(0) };\n  return arr.reduce(\n    (acc, v, i) => {\n      if (D(acc.value).lt(v)) {\n        acc.index = i;\n        acc.value = v;\n      }\n      return acc;\n    },\n    { index: 0, value: arr[0] }\n  );\n};\n","import Decimal from \"decimal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { tabs } from \"./constants/tabs\";\nimport { Inventory } from \"./containers/inventory\";\nimport {\n  addNumber,\n  clearClicked,\n  removeNumberByIndex,\n  setMoney,\n} from \"./slices/saveSlice\";\nimport { D } from \"./utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"./utils/hooks\";\n\nfunction Game() {\n  const dispatch = useAppDispatch();\n\n  const [curTab, setTab] = useState(0);\n\n  const inv = useAppSelector((state) => state.save.inventory);\n  const money = useAppSelector((state) => state.save.money);\n  const startingNumber = useAppSelector((state) => state.save.startingNumber);\n\n  const handleSellAll = () => {\n    let moneyToAdd = D(\"0\");\n    for (let i = inv.length - 1; i > 0; i--) {\n      moneyToAdd = moneyToAdd.add(inv[i]);\n      dispatch(removeNumberByIndex(i));\n    }\n    dispatch(removeNumberByIndex(0));\n    dispatch(addNumber(startingNumber));\n    dispatch(setMoney(Decimal.add(money, moneyToAdd).toString()));\n  };\n\n  const tabNavs = (\n    <div id=\"tabNavs\">\n      {tabs.map((v, i) => (\n        <span\n          className={`tabNav ${i === curTab ? \"selected\" : \"\"}`}\n          onClick={() => setTab(i)}\n          key={i}>\n          {v.name}\n        </span>\n      ))}\n    </div>\n  );\n\n  const Abc = tabs[curTab].tab;\n\n  const _handleKeyDown = (event: KeyboardEvent) => {\n    switch (event.key) {\n      case \"Esc\":\n      case \"Escape\":\n        dispatch(clearClicked());\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", _handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", _handleKeyDown);\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      {tabNavs}\n      <Abc />\n      <Inventory />\n      <div id=\"bottomBar\">\n        <button onClick={handleSellAll}>\n          <h2>Sell All</h2>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","// From https://github.com/spotky1004/Bunch-of-Achievements/blob/main/src/util/SaveLoad.js\n\nexport function mergeObject(target: any, source: any) {\n  target = target ?? {};\n  for (const i in source) {\n    if (Array.isArray(source[i])) {\n      target[i] = target[i] ?? [];\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\nexport function mergeArray(target: Array<any>, source: Array<any>) {\n  for (let i = 0, l = source.length; i < l; i++) {\n    if (Array.isArray(source[i])) {\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport saveReducer, {\n  initialState as saveInitialState,\n} from \"./slices/saveSlice\";\nimport { mergeObject } from \"./utils/merge\";\n\nconst persistedState = JSON.parse(\n  localStorage.getItem(\"notAMergeGame\") || \"{}\"\n);\n\nconst store = configureStore({\n  reducer: {\n    save: saveReducer,\n  },\n  preloadedState: mergeObject(persistedState, { save: saveInitialState }),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notAMergeGame\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}