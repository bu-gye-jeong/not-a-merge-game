{"version":3,"sources":["components/ResetButton.tsx","constants/countToReset.tsx","utils/decimal.tsx","constants/shopContents.tsx","constants/upgrades.tsx","slices/saveSlice.tsx","utils/hooks.tsx","components/shopItem.tsx","components/PlainButton.tsx","constants/tabs.tsx","containers/shop.tsx","containers/upgrades.tsx","containers/options.tsx","components/invItem.tsx","containers/inventory.tsx","Game.tsx","utils/merge.tsx","store.tsx","index.tsx"],"names":["ResetButton","reset","useState","count","setCount","onClick","id","className","D","$","Decimal","shopContents","paramCount","exp","calc","num","add","toString","unlockPrice","price","mul","upgrades","content","pow","action","setStartingNumber","invMax","setInvMax","initialState","inventory","itemBought","Array","length","fill","money","startingNumber","upgrade","saveSlice","createSlice","name","reducers","addNumber","state","push","payload","removeNumberByIndex","splice","buyOrSellShopItem","slice","setMoney","clearClicked","clickedNumber","clickedShop","clickShop","clickNumber","hardReset","localStorage","removeItem","buyUpgrade","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","ShopItem","isOpen","isClicked","cannotClick","PlainButton","split","map","line","tabs","tab","dispatch","isBought","save","shopItems","item","index","DecMoney","gt","sub","handleClick","undefined","upgradeBtns","v","i","InvItem","Inventory","includes","shopContent","calcParam","Game","curTab","setTab","inv","tabNavs","Abc","moneyToAdd","mergeObject","target","source","isArray","mergeArray","constructor","l","persistedState","JSON","parse","getItem","store","configureStore","reducer","saveReducer","preloadedState","saveInitialState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b81a4c57.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport { countToReset } from \"../constants/countToReset\";\n\nexport const ResetButton = ({ reset }: { reset(): void }) => {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    if (countToReset - count <= 1) {\n      reset();\n      setCount(0);\n      return;\n    }\n    setCount(count + 1);\n  };\n\n  return (\n    <button onClick={handleClick} id=\"resetButton\" className=\"plainButton\">\n      Press {countToReset - count} more time to <b>HARD RESET</b>\n    </button>\n  );\n};\n","export const countToReset = 5;\n","import Decimal from \"decimal.js\";\n\nexport const D = ($: Decimal.Value) => new Decimal($);\n","// Shop Contents\n\nimport { D } from \"../utils/decimal\";\n\nexport interface IShopContent {\n  paramCount: number;\n  exp: string;\n  calc(...num: string[]): string;\n  unlockPrice: string;\n  price: string;\n}\n\nexport const shopContents: IShopContent[] = [\n  {\n    paramCount: 1,\n    exp: \"x+1\",\n    calc: (num) => D(num).add(1).toString(),\n    unlockPrice: \"0\",\n    price: \"0\",\n  },\n  {\n    paramCount: 1,\n    exp: \"2x\",\n    calc: (num) => D(num).mul(2).toString(),\n    unlockPrice: \"100\",\n    price: \"10\",\n  },\n];\n","import Decimal from \"decimal.js\";\nimport { setInvMax, setStartingNumber, ISaveState } from \"../slices/saveSlice\";\n\nexport interface IUpgrade {\n  count: number;\n  content: string;\n  price(count: number): string;\n  action(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n}\n\nexport const upgrades: IUpgrade[] = [\n  {\n    count: 4,\n    content: \"Multiply 2 to starting number\",\n    price: (count) => Decimal.pow(100, count + 1).toString(),\n    action: (count) => setStartingNumber(Decimal.pow(2, count).toString()),\n  },\n  {\n    count: 5,\n    content: \"Expand inventory\",\n    price: (count) => Decimal.pow(1000, count).mul(30).toString(),\n    action: (count, { invMax }) => setInvMax(invMax + 1),\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { upgrades } from \"../constants/upgrades\";\n\nexport interface ISaveState {\n  inventory: string[];\n  invMax: number;\n  itemBought: boolean[];\n  money: string;\n  startingNumber: string;\n  upgrade: number[];\n  clickedShop?: number;\n  clickedNumber?: number[];\n}\n\nexport const initialState = {\n  inventory: [\"1\"],\n  invMax: 5,\n  itemBought: new Array(shopContents.length).fill(false),\n  money: \"0\",\n  startingNumber: \"1\",\n  upgrade: new Array(upgrades.length).fill(0),\n} as ISaveState;\n\nconst saveSlice = createSlice({\n  name: \"save\",\n  initialState,\n  reducers: {\n    addNumber(state, action: PayloadAction<string>) {\n      if (state.invMax > state.inventory.length)\n        state.inventory.push(action.payload);\n    },\n    removeNumberByIndex(state, action: PayloadAction<number>) {\n      if (0 <= action.payload && action.payload < state.invMax)\n        state.inventory.splice(action.payload, 1);\n    },\n    buyOrSellShopItem(state, action: PayloadAction<number>) {\n      state.itemBought[action.payload] = !state.itemBought[action.payload];\n    },\n    setInvMax(state, action: PayloadAction<number>) {\n      state.invMax = action.payload;\n      state.inventory = state.inventory.slice(0, state.invMax);\n    },\n    setMoney(state, action: PayloadAction<string>) {\n      state.money = action.payload;\n    },\n    clearClicked(state, action: PayloadAction) {\n      delete state.clickedNumber;\n      delete state.clickedShop;\n    },\n    clickShop(state, action: PayloadAction<number>) {\n      state.clickedShop = action.payload;\n    },\n    clickNumber(state, action: PayloadAction<number>) {\n      if (!state.clickedNumber) {\n        state.clickedNumber = [];\n      }\n      state.clickedNumber.push(action.payload);\n    },\n    hardReset(state, action: PayloadAction) {\n      state.invMax = initialState.invMax;\n      state.inventory = initialState.inventory;\n      state.itemBought = initialState.itemBought;\n      state.money = initialState.money;\n      state.startingNumber = initialState.startingNumber;\n      state.upgrade = initialState.upgrade;\n      delete state.clickedNumber;\n      delete state.clickedShop;\n      localStorage.removeItem(\"notAMergeGame\");\n    },\n    setStartingNumber(state, action: PayloadAction<string>) {\n      state.startingNumber = action.payload;\n    },\n    buyUpgrade(state, action: PayloadAction<number>) {\n      state.upgrade[action.payload] += 1;\n    },\n  },\n});\n\nexport const {\n  addNumber,\n  removeNumberByIndex,\n  buyOrSellShopItem,\n  setInvMax,\n  setMoney,\n  clearClicked,\n  clickNumber,\n  clickShop,\n  hardReset,\n  setStartingNumber,\n  buyUpgrade,\n} = saveSlice.actions;\n\nexport default saveSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport { IShopContent } from \"../constants/shopContents\";\n\nexport const ShopItem = ({\n  content,\n  isOpen,\n  isClicked,\n  cannotClick,\n  onClick,\n}: {\n  content: IShopContent;\n  isOpen: boolean;\n  isClicked: boolean;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`shopItem \n            ${isClicked ? \"clicked\" : \"\"}\n            ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {isOpen ? <span className=\"exp\">{content.exp}</span> : \"\"}\n      {isOpen\n        ? \" - Cost : \" + content.price\n        : content.unlockPrice + \" to unlock\"}\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const PlainButton = ({\n  content,\n  onClick,\n  id,\n  className,\n}: {\n  content: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  id?: string;\n  className?: string;\n}) => {\n  return (\n    <button onClick={onClick} className={`plainButton ${className}`} id={id}>\n      {content.split(\"\\n\").map((line) => {\n        return (\n          <span>\n            {line}\n            <br />\n          </span>\n        );\n      })}\n    </button>\n  );\n};\n","import { Options } from \"../containers/options\";\nimport { Shop } from \"../containers/shop\";\nimport { Upgrades } from \"../containers/upgrades\";\n\n// Tabs\ninterface ITab {\n  name: string;\n  tab: () => JSX.Element;\n}\n\nexport const tabs: ITab[] = [\n  { name: \"shop\", tab: Shop },\n  { name: \"upgrades\", tab: Upgrades },\n  { name: \"option\", tab: Options },\n];\n","import React from \"react\";\nimport { ShopItem } from \"../components/shopItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { setMoney, buyOrSellShopItem, clickShop } from \"../slices/saveSlice\";\nimport { D } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Shop = () => {\n  const dispatch = useAppDispatch();\n\n  const isBought = useAppSelector((state) => state.save.itemBought);\n  const money = useAppSelector((state) => state.save.money);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n\n  function handleClick(index: number) {\n    const DecMoney = D(money);\n    if (isBought[index]) {\n      const price = D(shopContents[index].price);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(clickShop(index));\n    } else {\n      const price = D(shopContents[index].unlockPrice);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(buyOrSellShopItem(index));\n    }\n  }\n\n  const shopItems = (\n    <div id=\"shopItems\">\n      {shopContents.map((item, index) => {\n        return (\n          <ShopItem\n            content={item}\n            isOpen={isBought[index]}\n            isClicked={index === clickedShop}\n            onClick={() => handleClick(index)}\n            cannotClick={\n              clickedShop !== undefined ||\n              (isBought[index] && D(shopContents[index].price).gt(money)) ||\n              (!isBought[index] && D(shopContents[index].unlockPrice).gt(money))\n            }\n            key={index}></ShopItem>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div id=\"shop\" className=\"tab\">\n      <h3 className=\"title\">Shop</h3>\n      {shopItems}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { PlainButton } from \"../components/PlainButton\";\nimport { IUpgrade, upgrades } from \"../constants/upgrades\";\nimport { buyUpgrade, setMoney } from \"../slices/saveSlice\";\nimport { D } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Upgrades = () => {\n  const dispatch = useAppDispatch();\n\n  const upgrade = useAppSelector((state) => state.save.upgrade);\n  const money = useAppSelector((state) => state.save.money);\n  const save = useAppSelector((state) => state.save);\n\n  const handleClick = (v: IUpgrade, i: number) => {\n    const price = D(v.price(upgrade[i]));\n    if (price.gt(money)) return;\n    dispatch(setMoney(D(money).sub(price).toString()));\n    dispatch(buyUpgrade(i));\n    dispatch(v.action(upgrade[i], save));\n  };\n\n  const upgradeBtns = upgrades.map((v, i) => {\n    return (\n      <PlainButton\n        content={v.content + \"\\nCost : \" + v.price(upgrade[i])}\n        onClick={() => handleClick(v, i)}\n        id={\"upgrade\" + i}\n        className={`upgrade ${\n          D(v.price(upgrade[i])).gt(money) ? \"cannotClick\" : \"\"\n        }`}\n        key={i}></PlainButton>\n    );\n  });\n\n  return (\n    <div id=\"upgrades\" className=\"tab\">\n      <h3 className=\"title\">Upgrades</h3>\n      <div id=\"upgradesGrid\">{upgradeBtns}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ResetButton } from \"../components/ResetButton\";\nimport { hardReset } from \"../slices/saveSlice\";\nimport { useAppDispatch } from \"../utils/hooks\";\n\nexport const Options = () => {\n  const dispatch = useAppDispatch();\n\n  const reset = () => {\n    dispatch(hardReset());\n  };\n\n  return (\n    <div id=\"options\" className=\"tab\">\n      <h3 className=\"title\">Option</h3>\n      <ResetButton reset={reset}></ResetButton>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const InvItem = ({\n  content,\n  cannotClick,\n  onClick,\n}: {\n  content: string;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`invItem ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { InvItem } from \"../components/invItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addNumber, clearClicked, clickNumber } from \"../slices/saveSlice\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Inventory = () => {\n  const dispatch = useAppDispatch();\n\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const money = useAppSelector((state) => state.save.money);\n\n  const handleClick = (index: number) => {\n    if (\n      clickedShop === undefined ||\n      (clickedNumber !== undefined && clickedNumber.includes(index))\n    )\n      return;\n    const shopContent = shopContents[clickedShop!];\n    if (clickedNumber?.length ?? 0 + 1 < shopContent.paramCount)\n      return dispatch(clickNumber(index));\n    const calcParam = clickedNumber\n      ? [...clickedNumber, index].map((v) => inventory[v])\n      : [inventory[index]];\n    dispatch(addNumber(shopContent.calc(...calcParam)));\n    dispatch(clearClicked());\n  };\n\n  return (\n    <div id=\"inventory\" className=\"tab\">\n      <h3 className=\"title\">\n        Inventory - {inventory.length} / {invMax}\n      </h3>\n      <h3 id=\"resourceDisplayer\">Money : {money}</h3>\n      <div id=\"invItems\">\n        {inventory.map((item, index) => {\n          return (\n            <InvItem\n              content={item}\n              cannotClick={\n                clickedShop === undefined ||\n                (clickedNumber !== undefined && clickedNumber.includes(index))\n              }\n              onClick={() => handleClick(index)}\n              key={index}></InvItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import Decimal from \"decimal.js\";\nimport React, { useState } from \"react\";\nimport { tabs } from \"./constants/tabs\";\nimport { Inventory } from \"./containers/inventory\";\nimport { addNumber, removeNumberByIndex, setMoney } from \"./slices/saveSlice\";\nimport { D } from \"./utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"./utils/hooks\";\n\nfunction Game() {\n  const dispatch = useAppDispatch();\n\n  const [curTab, setTab] = useState(0);\n\n  const inv = useAppSelector((state) => state.save.inventory);\n  const money = useAppSelector((state) => state.save.money);\n  const startingNumber = useAppSelector((state) => state.save.startingNumber);\n\n  const handleSellAll = () => {\n    let moneyToAdd = D(\"0\");\n    for (let i = inv.length - 1; i >= 0; i--) {\n      moneyToAdd = moneyToAdd.add(inv[i]);\n      dispatch(removeNumberByIndex(i));\n    }\n    dispatch(addNumber(startingNumber));\n    dispatch(setMoney(Decimal.add(money, moneyToAdd).toString()));\n  };\n\n  const tabNavs = (\n    <div id=\"tabNavs\">\n      {tabs.map((v, i) => (\n        <span\n          className={`tabNav ${i === curTab ? \"selected\" : \"\"}`}\n          onClick={() => setTab(i)}\n          key={i}>\n          {v.name}\n        </span>\n      ))}\n    </div>\n  );\n\n  const Abc = tabs[curTab].tab;\n\n  return (\n    <div className=\"App\">\n      {tabNavs}\n      <Abc />\n      <Inventory />\n      <div id=\"bottomBar\">\n        <button onClick={handleSellAll}>\n          <h2>Sell All</h2>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","// From https://github.com/spotky1004/Bunch-of-Achievements/blob/main/src/util/SaveLoad.js\n\nexport function mergeObject(target: any, source: any) {\n  target = target ?? {};\n  for (const i in source) {\n    if (Array.isArray(source[i])) {\n      target[i] = target[i] ?? [];\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\nexport function mergeArray(target: Array<any>, source: Array<any>) {\n  for (let i = 0, l = source.length; i < l; i++) {\n    if (Array.isArray(source[i])) {\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport saveReducer, {\n  initialState as saveInitialState,\n} from \"./slices/saveSlice\";\nimport { mergeObject } from \"./utils/merge\";\n\nconst persistedState = JSON.parse(\n  localStorage.getItem(\"notAMergeGame\") || \"{}\"\n);\n\nconst store = configureStore({\n  reducer: {\n    save: saveReducer,\n  },\n  preloadedState: mergeObject(persistedState, { save: saveInitialState }),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notAMergeGame\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}