{"version":3,"sources":["components/invItem.tsx","utils/hooks.tsx","containers/inventory.tsx","components/shopItem.tsx","constants/shopContents.tsx","slices/saveSlice.tsx","containers/shop.tsx","App.tsx","utils/merge.tsx","store.tsx","index.tsx"],"names":["InvItem","content","className","useAppDispatch","useDispatch","useAppSelector","useSelector","Inventory","inventory","state","save","invMax","id","length","map","item","index","ShopItem","isOpen","isClicked","onClick","canClick","exp","price","shopContents","paramCount","calc","num","initialState","itemBought","Array","fill","money","saveSlice","createSlice","name","reducers","addNumber","action","push","payload","removeNumberByIndex","splice","buyOrSellShopItem","changeInvMax","slice","addMoney","clearClicked","clickedNumber","clickedShop","clickShop","clickNumber","actions","Shop","dispatch","isBought","shopItems","handleClick","undefined","App","Math","floor","random","localStorage","removeItem","mergeObject","target","source","i","isArray","mergeArray","constructor","l","persistedState","JSON","parse","getItem","store","configureStore","reducer","saveReducer","preloadedState","saveInitialState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d62abe99.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const InvItem = ({ content }: { content: number }) => {\n  return <span className=\"invItem\">{content}</span>;\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport { InvItem } from \"../components/invItem\";\nimport { useAppSelector } from \"../utils/hooks\";\n\nexport const Inventory = () => {\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n\n  return (\n    <div id=\"inventory\">\n      <h3 className=\"title\">\n        Inventory - {inventory.length} / {invMax}\n      </h3>\n      <div id=\"invItems\">\n        {inventory.map((item, index) => {\n          return <InvItem content={item} key={index}></InvItem>;\n        })}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { IShopContent } from \"../constants/shopContents\";\n\nexport const ShopItem = ({\n  content,\n  isOpen,\n  isClicked,\n  onClick,\n  canClick,\n}: {\n  content: IShopContent;\n  isOpen: boolean;\n  isClicked: boolean;\n  canClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`shopItem \n            ${isOpen ? \"unlocked\" : \"locked\"} \n            ${isClicked ? \"clicked\" : \"\"}\n            ${canClick ? \"canClick\" : \"\"}`}\n      onClick={onClick}>\n      {isOpen ? content.exp : content.price + \" to unlock\"}\n    </button>\n  );\n};\n","export interface IShopContent {\n  paramCount: number;\n  exp: string;\n  calc(...num: number[]): number;\n  price: number;\n}\n\nexport const shopContents: IShopContent[] = [\n  {\n    paramCount: 1,\n    exp: \"x+1\",\n    calc: (num) => num + 1,\n    price: 0,\n  },\n  {\n    paramCount: 1,\n    exp: \"2x\",\n    calc: (num) => num * 2,\n    price: 100,\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { shopContents } from \"../constants/shopContents\";\n\ninterface ISaveState {\n  inventory: number[];\n  invMax: number;\n  itemBought: boolean[];\n  money: number;\n  clickedShop?: number;\n  clickedNumber?: number[];\n}\n\nexport const initialState = {\n  inventory: [1],\n  invMax: 20,\n  itemBought: new Array(shopContents.length).fill(false),\n  money: 0,\n} as ISaveState;\n\nconst saveSlice = createSlice({\n  name: \"save\",\n  initialState,\n  reducers: {\n    addNumber(state, action: PayloadAction<number>) {\n      if (state.invMax > state.inventory.length)\n        state.inventory.push(action.payload);\n    },\n    removeNumberByIndex(state, action: PayloadAction<number>) {\n      if (0 <= action.payload && action.payload < state.invMax)\n        state.inventory.splice(action.payload, 1);\n    },\n    buyOrSellShopItem(state, action: PayloadAction<number>) {\n      state.itemBought[action.payload] = !state.itemBought[action.payload];\n    },\n    changeInvMax(state, action: PayloadAction<number>) {\n      state.invMax = action.payload;\n      state.inventory = state.inventory.slice(0, state.invMax);\n    },\n    addMoney(state, action: PayloadAction<number>) {\n      state.money += action.payload;\n    },\n    clearClicked(state, action: PayloadAction) {\n      delete state.clickedNumber;\n      delete state.clickedShop;\n    },\n    clickShop(state, action: PayloadAction<number>) {\n      state.clickedShop = action.payload;\n    },\n    clickNumber(state, action: PayloadAction<number>) {\n      if (!state.clickedNumber) {\n        state.clickedNumber = [];\n      }\n      state.clickedNumber.push(action.payload);\n    },\n  },\n});\n\nexport const {\n  addNumber,\n  removeNumberByIndex,\n  buyOrSellShopItem,\n  changeInvMax,\n  addMoney,\n  clearClicked,\n  clickNumber,\n  clickShop,\n} = saveSlice.actions;\n\nexport default saveSlice.reducer;\n","import React from \"react\";\nimport { ShopItem } from \"../components/shopItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addMoney, buyOrSellShopItem, clickShop } from \"../slices/saveSlice\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Shop = () => {\n  const dispatch = useAppDispatch();\n\n  const isBought = useAppSelector((state) => state.save.itemBought);\n  const money = useAppSelector((state) => state.save.money);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n\n  function handleClick(index: number) {\n    if (isBought[index]) {\n      dispatch(clickShop(index));\n    } else {\n      const price = shopContents[index].price;\n      if (price > money) return;\n      dispatch(addMoney(-price));\n      dispatch(buyOrSellShopItem(index));\n    }\n  }\n\n  const shopItems = (\n    <div id=\"shopItems\">\n      {shopContents.map((item, index) => {\n        return (\n          <ShopItem\n            content={item}\n            isOpen={isBought[index]}\n            isClicked={index === clickedShop}\n            onClick={() => handleClick(index)}\n            canClick={\n              clickedShop === undefined && shopContents[index].price <= money\n            }\n            key={index}></ShopItem>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div id=\"shop\">\n      <h3 className=\"title\">Shop</h3>\n      {shopItems}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Inventory } from \"./containers/inventory\";\nimport { Shop } from \"./containers/shop\";\nimport { addNumber } from \"./slices/saveSlice\";\nimport { useAppDispatch } from \"./utils/hooks\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n\n  const handleAddNumber = () => {\n    dispatch(addNumber(Math.floor(Math.random() * 20)));\n  };\n\n  const clearLocalStorage = () => {\n    localStorage.removeItem(\"notAMergeGame\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Shop />\n      <Inventory />\n      <button onClick={handleAddNumber}>add number</button>\n      <button onClick={clearLocalStorage}>reset localStorage</button>\n    </div>\n  );\n}\n\nexport default App;\n","// From https://github.com/spotky1004/Bunch-of-Achievements/blob/main/src/util/SaveLoad.js\n\nexport function mergeObject(target: any, source: any) {\n  target = target ?? {};\n  for (const i in source) {\n    if (Array.isArray(source[i])) {\n      target[i] = target[i] ?? [];\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\nexport function mergeArray(target: Array<any>, source: Array<any>) {\n  for (let i = 0, l = source.length; i < l; i++) {\n    if (Array.isArray(source[i])) {\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport saveReducer, {\n  initialState as saveInitialState,\n} from \"./slices/saveSlice\";\nimport { mergeObject } from \"./utils/merge\";\n\nconst persistedState = JSON.parse(\n  localStorage.getItem(\"notAMergeGame\") || \"{}\"\n);\n\nconst store = configureStore({\n  reducer: {\n    save: saveReducer,\n  },\n  preloadedState: mergeObject(persistedState, { save: saveInitialState }),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notAMergeGame\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}