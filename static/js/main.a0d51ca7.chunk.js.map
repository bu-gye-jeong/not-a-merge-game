{"version":3,"sources":["components/ResetButton.tsx","constants/numbers.tsx","utils/decimal.tsx","constants/shopContents.tsx","constants/upgrades.tsx","slices/saveSlice.tsx","utils/hooks.tsx","components/upgradeButton.tsx","constants/prestigeUpgrades.tsx","components/shopItem.tsx","constants/tabs.tsx","containers/shop.tsx","utils/array.tsx","containers/upgrades.tsx","containers/prestige.tsx","containers/options.tsx","components/invItem.tsx","containers/inventory.tsx","Game.tsx","utils/merge.tsx","store.tsx","index.tsx"],"names":["ResetButton","reset","useState","count","setCount","onClick","id","className","D","$","Decimal","setMaxDigit","value","digit","num","toPrecision","includes","replace","shopContents","paramCount","exp","calc","add","toString","unlockPrice","price","mul","num1","num2","pow","upgrades","content","action","startingNumber","setStartingNumber","sellAction","div","invMax","setInvMax","initialState","inventory","itemBought","Array","length","fill","money","upgrade","ppUpgrade","tabUnlocked","pp","saveSlice","createSlice","name","reducers","addNumber","state","push","payload","removeNumberByIndex","splice","buyOrSellShopItem","slice","setMoney","clearClicked","clickedNumber","clickedShop","clickShop","clickNumber","resetProgress","localStorage","removeItem","buyUpgrade","sellUpgrade","buyPPUpgrade","sellPPUpgrade","unlockTab","setPP","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","useSelectInvItem","save","dispatch","index","shopIndex","undefined","shopContent","calcParam","map","v","UpgradeButton","onBuy","onSell","buyClassName","sellClassName","split","line","i","prestigeUpgrades","ShopItem","isOpen","isClicked","cannotClick","ReactHtmlParser","tabs","tab","isBought","selectInvItem","handleClick","DecMoney","gt","sub","setTimeout","arr","reduce","acc","lt","shopItems","item","upgradeBtns","handleBuy","handleSell","ppToGet","log","floor","isNaN","handleBuyUpgrade","condition","InvItem","Inventory","Game","curTab","setTab","inv","handleSellAll","useCallback","moneyToAdd","autoUpgrade","useEffect","forEach","tabNavs","Abc","_handleKeyDown","event","key","document","addEventListener","removeEventListener","mergeObject","target","source","isArray","mergeArray","constructor","l","persistedState","JSON","parse","getItem","store","configureStore","reducer","saveReducer","preloadedState","saveInitialState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"qPAIaA,EAAc,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,MAA+B,EACjCC,mBAAS,GADwB,mBACpDC,EADoD,KAC7CC,EAD6C,KAY3D,OACE,yBAAQC,QAVU,WAClB,GCRwB,EDQLF,GAAS,EAG1B,OAFAF,SACAG,EAAS,GAGXA,EAASD,EAAQ,IAIaG,GAAG,cAAcC,UAAU,cAAzD,mBCjBwB,EDkBAJ,EADxB,iBAC4C,+C,QEhBnCK,EAAI,SAACC,GAAD,OAAsB,IAAIC,IAAQD,IAEtCE,EAAc,SAACC,EAAsBC,GAChD,IAAMC,EAAMN,EAAEI,GAAOG,YAAY,GAEjC,OAAID,EAAIE,SAAS,KACRF,EAAIG,QAAQ,WAAY,IAAIA,QAAQ,WAAY,IAEhDH,EAAIG,QAAQ,aAAc,MAAMA,QAAQ,MAAO,KCE7CC,EAA+B,CAC1C,CACEC,WAAY,EACZC,IAAK,MACLC,KAAM,SAACP,GAAD,OAASN,EAAEM,GAAKQ,IAAI,GAAGC,YAC7BC,YAAa,IACbC,MAAO,KAET,CACEN,WAAY,EACZC,IAAK,KACLC,KAAM,SAACP,GAAD,OAASN,EAAEM,GAAKY,IAAI,GAAGH,YAC7BC,YAAa,MACbC,MAAO,MAET,CACEN,WAAY,EACZC,IAAK,OACLC,KAAM,SAACM,EAAMC,GAAP,OAAgBpB,EAAEmB,GAAMD,IAAI,GAAGJ,IAAIM,GAAML,YAC/CC,YAAa,MACbC,MAAO,MAET,CACEN,WAAY,EACZC,IAAK,KACLC,KAAM,SAACP,GAAD,OAASN,EAAEM,GAAKY,IAAI,GAAGH,YAC7BC,YAAa,OACbC,MAAO,OAET,CACEN,WAAY,EACZC,IAAK,kBACLC,KAAM,SAACP,GAAD,OAASN,EAAEM,GAAKe,IAAI,KAAKN,YAC/BC,YAAa,SACbC,MAAO,QAET,CACEN,WAAY,EACZC,IAAK,mBACLC,KAAM,SAACP,GAAD,OAASN,EAAEM,GAAKe,IAAI,KAAKH,IAAI,GAAGH,YACtCC,YAAa,OACbC,MAAO,UC9BEK,EAAuB,CAClC,CACE3B,MAAO,GACP4B,QAAS,gCACTN,MAAO,SAACtB,GAAD,OACLO,IAAQmB,IAAI,GAAI,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAI1B,IACvDuB,IAAI,IACJH,YACLS,OAAQ,SAAC7B,EAAD,OAAU8B,EAAV,EAAUA,eAAV,OACNC,EAAkBxB,IAAQgB,IAAIO,EAAgB,GAAGV,aACnDY,WAAY,SAAChC,EAAD,OAAU8B,EAAV,EAAUA,eAAV,OACVC,EAAkBxB,IAAQ0B,IAAIH,EAAgB,GAAGV,cAErD,CACEpB,MAAO,EACP4B,QAAS,mBACTN,MAAO,SAACtB,GAAD,OAAWO,IAAQmB,IAAI,IAAM1B,GAAOuB,IAAI,IAAIH,YACnDS,OAAQ,SAAC7B,EAAD,OAAUkC,EAAV,EAAUA,OAAV,OAAuBC,EAAUD,EAAS,IAClDF,WAAY,SAAChC,EAAD,OAAUkC,EAAV,EAAUA,OAAV,OAAuBC,EAAUD,EAAS,KAExD,CACElC,MAAO,EACP4B,QAAS,kCACTN,MAAO,SAACtB,GAAD,OAAWO,IAAQmB,IAAI,IAAK1B,GAAOuB,IAAI,KAAMH,aAEtD,CACEpB,MAAO,EACP4B,QAAS,mCACTN,MAAO,iBAAM,YCjCJc,EAAe,CAC1BC,UAAW,CAAC,KACZH,OAAQ,EACRI,WAAY,IAAIC,MAAMxB,EAAayB,QAAQC,MAAK,GAChDC,MAAO,IACPZ,eAAgB,IAChBa,QAAS,IAAIJ,MAAMZ,EAASa,QAAQC,KAAK,GACzCG,UAAW,IAAIL,MAAMZ,EAASa,QAAQC,KAAK,GAC3CI,YAAa,EAAC,GAAM,GAAM,GAAO,GACjCC,GAAI,KAGAC,EAAYC,YAAY,CAC5BC,KAAM,OACNb,eACAc,SAAU,CACRC,UADQ,SACEC,EAAOvB,GACXuB,EAAMlB,OAASkB,EAAMf,UAAUG,QACjCY,EAAMf,UAAUgB,KAAKxB,EAAOyB,UAEhCC,oBALQ,SAKYH,EAAOvB,GACrB,GAAKA,EAAOyB,SAAWzB,EAAOyB,QAAUF,EAAMlB,QAChDkB,EAAMf,UAAUmB,OAAO3B,EAAOyB,QAAS,IAE3CG,kBATQ,SASUL,EAAOvB,GACvBuB,EAAMd,WAAWT,EAAOyB,UAAYF,EAAMd,WAAWT,EAAOyB,UAE9DnB,UAZQ,SAYEiB,EAAOvB,GACfuB,EAAMlB,OAASL,EAAOyB,QACtBF,EAAMf,UAAYe,EAAMf,UAAUqB,MAAM,EAAGN,EAAMlB,SAEnDyB,SAhBQ,SAgBCP,EAAOvB,GACduB,EAAMV,MAAQb,EAAOyB,SAEvBM,aAnBQ,SAmBKR,EAAOvB,UACXuB,EAAMS,qBACNT,EAAMU,aAEfC,UAvBQ,SAuBEX,EAAOvB,GACfuB,EAAMU,YAAcjC,EAAOyB,SAE7BU,YA1BQ,SA0BIZ,EAAOvB,GACZuB,EAAMS,gBACTT,EAAMS,cAAgB,IAExBT,EAAMS,cAAcR,KAAKxB,EAAOyB,UAElCW,cAhCQ,SAgCMb,EAAOvB,GACnBuB,EAAMlB,OAASE,EAAaF,OAC5BkB,EAAMf,UAAYD,EAAaC,UAC/Be,EAAMd,WAAaF,EAAaE,WAChCc,EAAMV,MAAQN,EAAaM,MAC3BU,EAAMtB,eAAiBM,EAAaN,eACpCsB,EAAMT,QAAUP,EAAaO,QAC7BS,EAAMR,UAAYR,EAAaQ,iBACxBQ,EAAMS,qBACNT,EAAMU,YACTjC,EAAOyB,SAAW,IACpBF,EAAMN,GAAKV,EAAaU,IAEtBjB,EAAOyB,SAAW,IACpBF,EAAMP,YAAcT,EAAaS,YACjCqB,aAAaC,WAAW,mBAG5BpC,kBAlDQ,SAkDUqB,EAAOvB,GACvBuB,EAAMtB,eAAiBD,EAAOyB,SAEhCc,WArDQ,SAqDGhB,EAAOvB,GAChBuB,EAAMT,QAAQd,EAAOyB,UAAY,GAEnCe,YAxDQ,SAwDIjB,EAAOvB,GACjBuB,EAAMT,QAAQd,EAAOyB,UAAY,GAEnCgB,aA3DQ,SA2DKlB,EAAOvB,GAClBuB,EAAMR,UAAUf,EAAOyB,UAAY,GAErCiB,cA9DQ,SA8DMnB,EAAOvB,GACnBuB,EAAMR,UAAUf,EAAOyB,UAAY,GAErCkB,UAjEQ,SAiEEpB,EAAOvB,GACfuB,EAAMP,YAAYhB,EAAOyB,UAAW,GAEtCmB,MApEQ,SAoEFrB,EAAOvB,GACXuB,EAAMN,GAAKjB,EAAOyB,Y,EAsBpBP,EAAU2B,QAhBZvB,E,EAAAA,UACAI,E,EAAAA,oBACAE,E,EAAAA,kBACAtB,E,EAAAA,UACAwB,E,EAAAA,SACAC,E,EAAAA,aACAI,E,EAAAA,YACAD,E,EAAAA,UACAE,E,EAAAA,cACAlC,E,EAAAA,kBACAqC,E,EAAAA,WACAC,E,EAAAA,YACAC,E,EAAAA,aAEAE,G,EADAD,c,EACAC,WACAC,E,EAAAA,MAGa1B,IAAf,Q,eCxHa4B,EAAiB,kBAAMC,eACvBC,EAAkDC,IAyBlDC,EAAmB,WAC9B,IAAMjB,EAAce,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKlB,eACnDD,EAAgBgB,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKnB,iBACrDxB,EAAYwC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK3C,aACjD4C,EAAWN,IAEjB,OAAO,SAACO,GAA4C,IAAD,EAA5BC,EAA4B,uDAAhBrB,EACjC,UACgBsB,IAAdD,QACmBC,IAAlBvB,GAA+BA,EAAchD,SAASqE,IAFzD,CAKA,IAAMG,EAActE,EAAaoE,GACjC,IAAI,iBAACtB,QAAD,IAACA,OAAD,EAACA,EAAerB,cAAhB,QAA0B,GAAK,EAAI6C,EAAYrE,WACjDiE,EAASjB,EAAYkB,QADvB,CAIA,IAAMI,EAAYzB,EACd,sBAAIA,GAAJ,CAAmBqB,IAAOK,KAAI,SAACC,GAAD,OAAOnD,EAAUmD,MAC/C,CAACnD,EAAU6C,IACfD,EAAS9B,EAAUkC,EAAYnE,KAAZ,MAAAmE,EAAW,YAASC,MACvCL,EAASrB,SCnDA6B,EAAgB,SAAC,GAYvB,IAXL7D,EAWI,EAXJA,QACA8D,EAUI,EAVJA,MACAC,EASI,EATJA,OACAC,EAQI,EARJA,aACAC,EAOI,EAPJA,cAQA,OACE,sBAAKzF,UAAU,UAAf,UACE,wBAAQA,UAAWwF,EAAc1F,QAASwF,EAA1C,SACG9D,EAAQkE,MAAM,MAAMP,KAAI,SAACQ,EAAMC,GAC9B,OACE,iCACGD,EACD,yBAFSC,SAQfL,GAAUE,IACV,wBAAQzF,UAAWyF,EAAe3F,QAASyF,EAA3C,sBCdKM,EAAuC,CAClD,CACEjG,MAAO,EACP4B,QAAS,eACTN,MAAO,iBAAM,O,iBCbJ4E,EAAW,SAAC,GAYlB,IAXLtE,EAWI,EAXJA,QACAuE,EAUI,EAVJA,OACAC,EASI,EATJA,UACAC,EAQI,EARJA,YACAnG,EAOI,EAPJA,QAQA,OACE,yBACEE,UAAS,iCACDgG,EAAY,UAAY,GADvB,yBAEDC,EAAc,cAAgB,IACtCnG,QAASA,EAJX,UAKGiG,EACC,sBAAM/F,UAAU,MAAhB,SAAuBkG,IAAgB1E,EAAQX,OAE/C,GAEDkF,EACG,aAAe3F,EAAYoB,EAAQN,OACnCd,EAAYoB,EAAQP,aAAyB,iBClB1CkF,EAAe,CAC1B,CAAEtD,KAAM,OAAQuD,ICEE,WAClB,IAAMvB,EAAWN,IAEX8B,EAAW5B,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK1C,cAChDI,EAAQmC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKtC,SAC7CoB,EAAce,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKlB,eACnDnB,EAAUkC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKrC,WAC/CN,EAAYwC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK3C,aACjDH,EAAS2C,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK9C,UAE9CwE,EAAgB3B,IAEtB,SAAS4B,EAAYzB,GACnB,IAAIpB,EAAJ,CACA,IAAM8C,EAAWvG,EAAEqC,GACnB,GAAI+D,EAASvB,GAAQ,CACnB,GACE7C,EAAUG,SAAWN,GACrBG,EAAUG,OAASzB,EAAamE,GAAOlE,WAEvC,OACF,IAAMM,EAAQjB,EAAEU,EAAamE,GAAO5D,OACpC,GAAIA,EAAMuF,GAAGD,GAAW,OACxB3B,EAAStB,EAASiD,EAASE,IAAIxF,GAAOF,aACtC6D,EAASlB,EAAUmB,IAEA,IAAfvC,EAAQ,IACVoE,YACE,kBAAML,GC1CIM,ED0Cc3E,ECzCb,IAAf2E,EAAIxE,OAAqB,CAAE0C,MAAO,EAAGzE,MAAOJ,EAAE,IAC3C2G,EAAIC,QACT,SAACC,EAAK1B,EAAGQ,GAKP,OAJI3F,EAAE6G,EAAIzG,OAAO0G,GAAG3B,KAClB0B,EAAIhC,MAAQc,EACZkB,EAAIzG,MAAQ+E,GAEP0B,IAET,CAAEhC,MAAO,EAAGzE,MAAOuG,EAAI,MDgCkB9B,MAAOA,GC1CjC,IAAC8B,ID2CS,KAAlB,EAAIrE,EAAQ,SAEZ,CACL,IAAMrB,EAAQjB,EAAEU,EAAamE,GAAO7D,aACpC,GAAIC,EAAMuF,GAAGD,GAAW,OACxB3B,EAAStB,EAASiD,EAASE,IAAIxF,GAAOF,aACtC6D,EAASxB,EAAkByB,MAI/B,IAAMkC,EACJ,qBAAKjH,GAAG,YAAR,SACGY,EAAawE,KAAI,SAAC8B,EAAMnC,GACvB,OACE,cAAC,EAAD,CACEtD,QAASyF,EACTlB,OAAQM,EAASvB,GACjBkB,UAAWlB,IAAUpB,EACrB5D,QAAS,kBAAMyG,EAAYzB,IAC3BmB,iBACkBjB,IAAhBtB,IACC2C,EAASvB,GACN7E,EAAEU,EAAamE,GAAO5D,OAAOuF,GAAGnE,IAChCL,EAAUG,SAAWN,GACrBG,EAAUG,OAAS6E,EAAKrG,WACxBX,EAAEU,EAAamE,GAAO7D,aAAawF,GAAGnE,KAEvCwC,QAMf,OACE,sBAAK/E,GAAG,OAAOC,UAAU,MAAzB,UACE,oBAAIA,UAAU,QAAQF,QAAS,kBAAM+E,EAASrB,MAA9C,+CAGCwD,ODpEL,CAAEnE,KAAM,WAAYuD,IGRE,WACtB,IAAMvB,EAAWN,IAEXhC,EAAUkC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKrC,WAC/CD,EAAQmC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKtC,SAC7CsC,EAAOH,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,QAkBvCsC,EAAc3F,EAAS4D,KAAI,SAACC,EAAGQ,GACnC,OACE,cAAC,EAAD,CACEpE,QAAO,UAAK4D,EAAE5D,QAAP,cAAoBe,EAAQqD,GAA5B,YAAkCR,EAAExF,MAApC,oBACL2C,EAAQqD,IAAMR,EAAExF,MACZ,UACAQ,EAAYgF,EAAElE,MAAMqB,EAAQqD,MAElCN,MAAO,kBAxBK,SAACF,EAAaQ,GAC9B,KAAIrD,EAAQqD,IAAMR,EAAExF,OAApB,CACA,IAAMsB,EAAQjB,EAAEmF,EAAElE,MAAMqB,EAAQqD,KAC5B1E,EAAMuF,GAAGnE,KACbuC,EAAStB,EAAStD,EAAEqC,GAAOoE,IAAIxF,GAAOF,aACtC6D,EAASb,EAAW4B,IAChBR,EAAE3D,QAAQoD,EAASO,EAAE3D,OAAOc,EAAQqD,GAAIhB,MAkB3BuC,CAAU/B,EAAGQ,IAC1BJ,aAAY,qBACVvF,EAAEmF,EAAElE,MAAMqB,EAAQqD,KAAKa,GAAGnE,IAAUC,EAAQqD,KAAOR,EAAExF,MACjD,cACA,GAHM,YAIR2C,EAAQqD,IAAMR,EAAExF,MAAQ,MAAQ,IACpC2F,OAAQ,kBAtBK,SAACH,EAAaQ,GAC/B,KAAIrD,EAAQqD,IAAM,GAAlB,CACA,IAAM1E,EAAQjB,EAAEmF,EAAElE,MAAMqB,EAAQqD,GAAK,IACrCf,EAAStB,EAAStD,EAAEiB,GAAOC,IAAI,IAAKJ,IAAIuB,GAAOtB,aAC/C6D,EAASZ,EAAY2B,IACjBR,EAAExD,YAAYiD,EAASO,EAAExD,WAAWW,EAAQqD,GAAIhB,KAiBlCwC,CAAWhC,EAAGQ,IAC5BH,cAAa,sBAAiBlD,EAAQqD,IAAM,EAAI,cAAgB,KAC3DA,MAIX,OACE,sBAAK7F,GAAG,WAAWC,UAAU,MAA7B,UACE,oBAAIA,UAAU,QAAd,sBACA,qBAAKD,GAAG,eAAR,SAAwBmH,SHrC5B,CACErE,KAAM,WACNuD,IIRoB,WACtB,IAAMvB,EAAWN,IAEXjC,EAAQmC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKtC,SAC7CI,EAAK+B,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKlC,MAC1CF,EAAYiC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKpC,aACjDoC,EAAOH,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,QAEvCyC,EAAW,WACf,IAAM3E,EAAKzC,EAAEqC,GAAOgF,IAAI,IAAIA,IAAI,GAAGC,QACnC,OAAO7E,EAAG8E,QAAU,EAAI9E,EAAG1B,WAFZ,GAoBXkG,EAAcrB,EAAiBV,KAAI,SAACC,EAAGQ,GAC3C,OACE,cAAC,EAAD,CACEpE,QAAO,UAAK4D,EAAE5D,QAAP,cAAoBgB,EAAUoD,GAA9B,YAAoCR,EAAExF,MAAtC,oBACL4C,EAAUoD,IAAMR,EAAExF,MACd,UACAQ,EAAYgF,EAAElE,MAAMsB,EAAUoD,MAEpCN,MAAO,kBAjBY,SAACF,EAAqBQ,GAC7C,KAAIpD,EAAUoD,IAAMR,EAAExF,OAAtB,CACA,IAAMsB,EAAQjB,EAAEmF,EAAElE,MAAMsB,EAAUoD,KAC9B1E,EAAMuF,GAAG/D,KACbmC,EAASR,EAAMpE,EAAEyC,GAAIgE,IAAIxF,GAAOF,aAChC6D,EAASX,EAAa0B,IAClBR,EAAE3D,QAAQoD,EAASO,EAAE3D,OAAOe,EAAUoD,GAAIhB,MAW7B6C,CAAiBrC,EAAGQ,IACjCJ,aAAY,oBACVvF,EAAEmF,EAAElE,MAAMsB,EAAUoD,KAAKa,GAAG/D,IAAOF,EAAUoD,KAAOR,EAAExF,MAClD,cACA,GAHM,YAIR4C,EAAUoD,IAAMR,EAAExF,MAAQ,MAAQ,KACjCgG,MAIX,OACE,sBAAK7F,GAAG,WAAWC,UAAU,MAA7B,UACE,oBAAIA,UAAU,QAAd,sBACA,wBACED,GAAG,iBACHD,QAtCiB,WACjBG,EAAEqC,GAAOmE,GAAG,SAChB5B,EAAShB,EAAc,IACvBgB,EAASR,EAAMpE,EAAEyC,GAAI3B,IAAIsG,GAASrG,eAoC9BhB,UAAS,UAAKC,EAAEqC,GAAOmE,GAAG,OAAS,GAAK,eAH1C,SAIGxG,EAAEqC,GAAOmE,GAAG,OAAZ,0BACsBY,EADtB,OAEG,oCAEN,sBAAKtH,GAAG,aAAR,UACE,0CACA,qBAAKA,GAAG,gBAAR,SAAyBmH,WJlD7BQ,UAAW,SAAC9C,GAAD,OAAU3E,EAAE2E,EAAKtC,OAAOmE,GAAG,UAExC,CAAE5D,KAAM,SAAUuD,IKjBG,WACrB,IAAMvB,EAAWN,IAMjB,OACE,sBAAKxE,GAAG,UAAUC,UAAU,MAA5B,UACE,oBAAIA,UAAU,QAAd,oBACA,cAAC,EAAD,CAAaN,MAPH,WACZmF,EAAShB,EAAc,eCPd8D,EAAU,SAAC,GAQjB,IAPLnG,EAOI,EAPJA,QACAyE,EAMI,EANJA,YACAnG,EAKI,EALJA,QAMA,OACE,wBACEE,UAAS,kBAAaiG,EAAc,cAAgB,IACpDnG,QAASA,EAFX,SAGG0B,KCTMoG,EAAY,WACvB,IAAM3F,EAAYwC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK3C,aACjDH,EAAS2C,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK9C,UAC9C4B,EAAce,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKlB,eACnDD,EAAgBgB,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKnB,iBACrDnB,EAAQmC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKtC,SAC7CI,EAAK+B,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKlC,MAE1C6D,EAAc5B,IAEpB,OACE,sBAAK5E,GAAG,YAAYC,UAAU,MAA9B,UACE,qBAAIA,UAAU,QAAd,yBACeiC,EAAUG,OADzB,MACoCN,KAEpC,sBAAK/B,GAAG,YAAR,UACE,qBAAIC,UAAU,QAAd,qBAA+BI,EAAYkC,MAC3C,qBAAItC,UAAU,KAAd,kBAAyB0C,QAE3B,qBAAK3C,GAAG,WAAR,SACGkC,EAAUkD,KAAI,SAAC8B,EAAMnC,GACpB,OACE,cAAC,EAAD,CACEtD,QAASpB,EAAY6G,GACrBhB,iBACkBjB,IAAhBtB,QACmBsB,IAAlBvB,GAA+BA,EAAchD,SAASqE,GAEzDhF,QAAS,kBAAMyG,EAAYzB,KACtBA,YCoEJ+C,MAzFf,WACE,IAAMhD,EAAWN,IADH,EAGW5E,mBAAS,GAHpB,mBAGPmI,EAHO,KAGCC,EAHD,KAKRnD,EAAOH,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,QACvCoD,EAAMvD,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK3C,aAC3CH,EAAS2C,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAK9C,UAC9CQ,EAAQmC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKtC,SAC7CZ,EAAiB+C,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKlD,kBACtDe,EAAcgC,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKnC,eAEnDwF,EAAgBC,uBAAY,WAEhC,IADA,IAAIC,EAAalI,EAAE,KACV2F,EAAIoC,EAAI5F,OAAS,EAAGwD,EAAI,EAAGA,IAClCuC,EAAaA,EAAWpH,IAAIiH,EAAIpC,IAChCf,EAAS1B,EAAoByC,IAE/Bf,EAAS1B,EAAoB,IAC7B0B,EAAS9B,EAAUrB,IACnBmD,EAAStB,EAASpD,IAAQY,IAAIuB,EAAO6F,GAAYnH,eAChD,CAAC6D,EAAUmD,EAAK1F,EAAOZ,IAGpB0G,EAAc3D,GAAe,SAACzB,GAAD,OAAWA,EAAM4B,KAAKrC,QAAQ,MACjE8F,qBAAU,WACY,IAAhBD,GACAJ,EAAI5F,SAAWN,GACjBmG,MAED,CAACD,EAAKlG,EAAQmG,EAAeG,IAEhCC,qBAAU,WACRlC,EAAKmC,SAAQ,SAAClD,EAAGQ,GACXnD,EAAYmD,IACZR,EAAEsC,YAAYtC,EAAEsC,UAAU9C,IAAcC,EAAST,EAAUwB,SAEhE,CAAChB,EAAMC,EAAUpC,IAEpB,IAAM8F,EACJ,qBAAKxI,GAAG,UAAR,SACGoG,EAAKhB,KAAI,SAACC,EAAGQ,GACZ,OAAKnD,EAAYmD,IAEf,sBACE5F,UAAS,iBAAY4F,IAAMkC,EAAS,WAAa,IACjDhI,QAAS,kBAAMiI,EAAOnC,IAFxB,SAIGR,EAAEvC,MADE+C,QAQT4C,EAAMrC,EAAK2B,GAAQ1B,IAEnBqC,EAAiB,SAACC,GACtB,OAAQA,EAAMC,KACZ,IAAK,MACL,IAAK,SACH9D,EAASrB,KACT,MACF,QACE,SAWN,OAPA6E,qBAAU,WAER,OADAO,SAASC,iBAAiB,UAAWJ,GAC9B,WACLG,SAASE,oBAAoB,UAAWL,OAK1C,sBAAKzI,UAAU,MAAf,UACGuI,EACD,cAACC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKzI,GAAG,YAAR,SACE,wBAAQD,QAASmI,EAAjB,SACE,kDC9FH,SAASc,EAAYC,EAAaC,GAAc,IAAD,EAEpD,IAAK,IAAMrD,KADXoD,EAAM,UAAGA,SAAH,QAAa,GACHC,EAAQ,CACS,IAAD,EAA9B,GAAI9G,MAAM+G,QAAQD,EAAOrD,IACvBoD,EAAOpD,GAAP,UAAYoD,EAAOpD,UAAnB,QAAyB,GACzBuD,EAAWH,EAAOpD,GAAIqD,EAAOrD,SACxB,GAAyB,kBAAdqD,EAAOrD,GACvBoD,EAAOpD,GAAKmD,EAAYC,EAAOpD,GAAIqD,EAAOrD,QACrC,CAAC,IAAD,EACLoD,EAAOpD,GAAKqD,EAAOrD,GAAGwD,YAAV,UAAsBJ,EAAOpD,UAA7B,QAAmCqD,EAAOrD,KAG1D,OAAOoD,EAEF,SAASG,EAAWH,EAAoBC,GAC7C,IAAK,IAAIrD,EAAI,EAAGyD,EAAIJ,EAAO7G,OAAQwD,EAAIyD,EAAGzD,IACxC,GAAIzD,MAAM+G,QAAQD,EAAOrD,IACvBuD,EAAWH,EAAOpD,GAAIqD,EAAOrD,SACxB,GAAyB,kBAAdqD,EAAOrD,GACvBoD,EAAOpD,GAAKmD,EAAYC,EAAOpD,GAAIqD,EAAOrD,QACrC,CAAC,IAAD,EACLoD,EAAOpD,GAAKqD,EAAOrD,GAAGwD,YAAV,UAAsBJ,EAAOpD,UAA7B,QAAmCqD,EAAOrD,IAG1D,OAAOoD,ECpBT,IAAMM,EAAiBC,KAAKC,MAC1B1F,aAAa2F,QAAQ,kBAAoB,MAGrCC,EAAQC,YAAe,CAC3BC,QAAS,CACPhF,KAAMiF,GAERC,eAAgBf,EAAYO,EAAgB,CAAE1E,KAAMmF,MAGtDL,EAAMM,WAAU,WACdlG,aAAamG,QAAQ,gBAAiBV,KAAKW,UAAUR,EAAMS,gBAM9CT,SCjBfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJd,SAAS2B,eAAe,W","file":"static/js/main.a0d51ca7.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport { countToReset } from \"../constants/numbers\";\n\nexport const ResetButton = ({ reset }: { reset(): void }) => {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    if (countToReset - count <= 1) {\n      reset();\n      setCount(0);\n      return;\n    }\n    setCount(count + 1);\n  };\n\n  return (\n    <button onClick={handleClick} id=\"resetButton\" className=\"plainButton\">\n      Press {countToReset - count} more time to <b>HARD RESET</b>\n    </button>\n  );\n};\n","export const countToReset = 5;\n\nexport const maxDigit = 5;\n","import Decimal from \"decimal.js\";\n\nexport const D = ($: Decimal.Value) => new Decimal($);\n\nexport const setMaxDigit = (value: Decimal.Value, digit: number) => {\n  const num = D(value).toPrecision(5);\n\n  if (num.includes(\"e\")) {\n    return num.replace(/0+(?=e)/g, \"\").replace(/\\.(?=e)/g, \"\");\n  } else {\n    return num.replace(/(\\..*?)0+$/, \"$1\").replace(/\\.$/, \"\");\n  }\n};\n","// Shop Contents\n\nimport { D } from \"../utils/decimal\";\n\nexport interface IShopContent {\n  paramCount: number;\n  exp: string;\n  calc(...num: string[]): string;\n  unlockPrice: string;\n  price: string;\n}\n\nexport const shopContents: IShopContent[] = [\n  {\n    paramCount: 1,\n    exp: \"x+1\",\n    calc: (num) => D(num).add(1).toString(),\n    unlockPrice: \"0\",\n    price: \"0\",\n  },\n  {\n    paramCount: 1,\n    exp: \"2x\",\n    calc: (num) => D(num).mul(2).toString(),\n    unlockPrice: \"100\",\n    price: \"10\",\n  },\n  {\n    paramCount: 2,\n    exp: \"2x+y\",\n    calc: (num1, num2) => D(num1).mul(2).add(num2).toString(),\n    unlockPrice: \"300\",\n    price: \"40\",\n  },\n  {\n    paramCount: 1,\n    exp: \"3x\",\n    calc: (num) => D(num).mul(3).toString(),\n    unlockPrice: \"2000\",\n    price: \"100\",\n  },\n  {\n    paramCount: 1,\n    exp: \"x<sup>1.2</sup>\",\n    calc: (num) => D(num).pow(1.2).toString(),\n    unlockPrice: \"100000\",\n    price: \"5000\",\n  },\n  {\n    paramCount: 1,\n    exp: \"3x<sup>1.1</sup>\",\n    calc: (num) => D(num).pow(1.1).mul(3).toString(),\n    unlockPrice: \"1e+6\",\n    price: \"50000\",\n  },\n];\n","import Decimal from \"decimal.js\";\nimport { setInvMax, setStartingNumber, ISaveState } from \"../slices/saveSlice\";\n\nexport interface IUpgrade {\n  count: number;\n  content: string;\n  price(count: number): string;\n  action?(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n  sellAction?(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n}\n\nexport const upgrades: IUpgrade[] = [\n  {\n    count: 10,\n    content: \"Multiply 2 to starting number\",\n    price: (count) =>\n      Decimal.pow(10, 1 + [0, 1, 2, 3, 4, 6, 9, 16, 25, 36, 81][count])\n        .mul(10)\n        .toString(),\n    action: (count, { startingNumber }) =>\n      setStartingNumber(Decimal.mul(startingNumber, 2).toString()),\n    sellAction: (count, { startingNumber }) =>\n      setStartingNumber(Decimal.div(startingNumber, 2).toString()),\n  },\n  {\n    count: 5,\n    content: \"Expand inventory\",\n    price: (count) => Decimal.pow(1000, count).mul(30).toString(),\n    action: (count, { invMax }) => setInvMax(invMax + 1),\n    sellAction: (count, { invMax }) => setInvMax(invMax - 1),\n  },\n  {\n    count: 3,\n    content: \"Auto-select the greatest number\",\n    price: (count) => Decimal.pow(100, count).mul(5000).toString(),\n  },\n  {\n    count: 1,\n    content: \"Auto-sell when inventory is full\",\n    price: () => \"300000\",\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { upgrades } from \"../constants/upgrades\";\n\nexport interface ISaveState {\n  inventory: string[];\n  invMax: number;\n  itemBought: boolean[];\n  money: string;\n  startingNumber: string;\n  upgrade: number[];\n  ppUpgrade: number[];\n  tabUnlocked: boolean[];\n  pp: string;\n  clickedShop?: number;\n  clickedNumber?: number[];\n}\n\nexport const initialState = {\n  inventory: [\"1\"],\n  invMax: 5,\n  itemBought: new Array(shopContents.length).fill(false),\n  money: \"0\",\n  startingNumber: \"1\",\n  upgrade: new Array(upgrades.length).fill(0),\n  ppUpgrade: new Array(upgrades.length).fill(0),\n  tabUnlocked: [true, true, false, true],\n  pp: \"0\",\n} as ISaveState;\n\nconst saveSlice = createSlice({\n  name: \"save\",\n  initialState,\n  reducers: {\n    addNumber(state, action: PayloadAction<string>) {\n      if (state.invMax > state.inventory.length)\n        state.inventory.push(action.payload);\n    },\n    removeNumberByIndex(state, action: PayloadAction<number>) {\n      if (0 <= action.payload && action.payload < state.invMax)\n        state.inventory.splice(action.payload, 1);\n    },\n    buyOrSellShopItem(state, action: PayloadAction<number>) {\n      state.itemBought[action.payload] = !state.itemBought[action.payload];\n    },\n    setInvMax(state, action: PayloadAction<number>) {\n      state.invMax = action.payload;\n      state.inventory = state.inventory.slice(0, state.invMax);\n    },\n    setMoney(state, action: PayloadAction<string>) {\n      state.money = action.payload;\n    },\n    clearClicked(state, action: PayloadAction) {\n      delete state.clickedNumber;\n      delete state.clickedShop;\n    },\n    clickShop(state, action: PayloadAction<number>) {\n      state.clickedShop = action.payload;\n    },\n    clickNumber(state, action: PayloadAction<number>) {\n      if (!state.clickedNumber) {\n        state.clickedNumber = [];\n      }\n      state.clickedNumber.push(action.payload);\n    },\n    resetProgress(state, action: PayloadAction<number>) {\n      state.invMax = initialState.invMax;\n      state.inventory = initialState.inventory;\n      state.itemBought = initialState.itemBought;\n      state.money = initialState.money;\n      state.startingNumber = initialState.startingNumber;\n      state.upgrade = initialState.upgrade;\n      state.ppUpgrade = initialState.ppUpgrade;\n      delete state.clickedNumber;\n      delete state.clickedShop;\n      if (action.payload >= 1) {\n        state.pp = initialState.pp;\n      }\n      if (action.payload >= 5) {\n        state.tabUnlocked = initialState.tabUnlocked;\n        localStorage.removeItem(\"notAMergeGame\");\n      }\n    },\n    setStartingNumber(state, action: PayloadAction<string>) {\n      state.startingNumber = action.payload;\n    },\n    buyUpgrade(state, action: PayloadAction<number>) {\n      state.upgrade[action.payload] += 1;\n    },\n    sellUpgrade(state, action: PayloadAction<number>) {\n      state.upgrade[action.payload] -= 1;\n    },\n    buyPPUpgrade(state, action: PayloadAction<number>) {\n      state.ppUpgrade[action.payload] += 1;\n    },\n    sellPPUpgrade(state, action: PayloadAction<number>) {\n      state.ppUpgrade[action.payload] -= 1;\n    },\n    unlockTab(state, action: PayloadAction<number>) {\n      state.tabUnlocked[action.payload] = true;\n    },\n    setPP(state, action: PayloadAction<string>) {\n      state.pp = action.payload;\n    },\n  },\n});\n\nexport const {\n  addNumber,\n  removeNumberByIndex,\n  buyOrSellShopItem,\n  setInvMax,\n  setMoney,\n  clearClicked,\n  clickNumber,\n  clickShop,\n  resetProgress,\n  setStartingNumber,\n  buyUpgrade,\n  sellUpgrade,\n  buyPPUpgrade,\n  sellPPUpgrade,\n  unlockTab,\n  setPP,\n} = saveSlice.actions;\n\nexport default saveSlice.reducer;\n","import { useRef, useEffect } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addNumber, clearClicked, clickNumber } from \"../slices/saveSlice\";\nimport type { RootState, AppDispatch } from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const useInterval = (\n  callback: (...args: any[]) => void,\n  delay: number\n) => {\n  const savedCallback = useRef<typeof callback>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current!();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport const useSelectInvItem = () => {\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const dispatch = useAppDispatch();\n\n  return (index: number, shopIndex = clickedShop) => {\n    if (\n      shopIndex === undefined ||\n      (clickedNumber !== undefined && clickedNumber.includes(index))\n    )\n      return;\n    const shopContent = shopContents[shopIndex];\n    if ((clickedNumber?.length ?? 0) + 1 < shopContent.paramCount) {\n      dispatch(clickNumber(index));\n      return;\n    }\n    const calcParam = clickedNumber\n      ? [...clickedNumber, index].map((v) => inventory[v])\n      : [inventory[index]];\n    dispatch(addNumber(shopContent.calc(...calcParam)));\n    dispatch(clearClicked());\n  };\n};\n","import React from \"react\";\n\nexport const UpgradeButton = ({\n  content,\n  onBuy,\n  onSell,\n  buyClassName,\n  sellClassName,\n}: {\n  content: string;\n  onBuy: React.MouseEventHandler<HTMLButtonElement>;\n  onSell?: React.MouseEventHandler<HTMLButtonElement>;\n  buyClassName: string;\n  sellClassName?: string;\n}) => {\n  return (\n    <div className=\"upgrade\">\n      <button className={buyClassName} onClick={onBuy}>\n        {content.split(\"\\n\").map((line, i) => {\n          return (\n            <span key={i}>\n              {line}\n              <br />\n            </span>\n          );\n        })}\n      </button>\n\n      {(onSell || sellClassName) && (\n        <button className={sellClassName} onClick={onSell}>\n          Sell\n        </button>\n      )}\n    </div>\n  );\n};\n","import { ISaveState } from \"../slices/saveSlice\";\n\nexport interface IPrestigeUpgrade {\n  count: number;\n  content: string;\n  price(count: number): string;\n  action?(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n}\n\nexport const prestigeUpgrades: IPrestigeUpgrade[] = [\n  {\n    count: 1,\n    content: \"Test Upgrade\",\n    price: () => \"2\",\n  },\n];\n","import React from \"react\";\nimport { IShopContent } from \"../constants/shopContents\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { maxDigit } from \"../constants/numbers\";\nimport { setMaxDigit } from \"../utils/decimal\";\n\nexport const ShopItem = ({\n  content,\n  isOpen,\n  isClicked,\n  cannotClick,\n  onClick,\n}: {\n  content: IShopContent;\n  isOpen: boolean;\n  isClicked: boolean;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`shopItem \n            ${isClicked ? \"clicked\" : \"\"}\n            ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {isOpen ? (\n        <span className=\"exp\">{ReactHtmlParser(content.exp)}</span>\n      ) : (\n        \"\"\n      )}\n      {isOpen\n        ? \" - Cost : \" + setMaxDigit(content.price, maxDigit)\n        : setMaxDigit(content.unlockPrice, maxDigit) + \" to unlock\"}\n    </button>\n  );\n};\n","import { Options } from \"../containers/options\";\nimport { Prestige } from \"../containers/prestige\";\nimport { Shop } from \"../containers/shop\";\nimport { Upgrades } from \"../containers/upgrades\";\nimport { ISaveState } from \"../slices/saveSlice\";\nimport { D } from \"../utils/decimal\";\n\n// Tabs\ninterface ITab {\n  name: string;\n  tab: () => JSX.Element;\n  condition?: (state: ISaveState) => boolean;\n}\n\nexport const tabs: ITab[] = [\n  { name: \"shop\", tab: Shop },\n  { name: \"upgrades\", tab: Upgrades },\n  {\n    name: \"prestige\",\n    tab: Prestige,\n    condition: (save) => D(save.money).gt(\"3e+5\"),\n  },\n  { name: \"option\", tab: Options },\n];\n","import React from \"react\";\nimport { ShopItem } from \"../components/shopItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport {\n  setMoney,\n  buyOrSellShopItem,\n  clickShop,\n  clearClicked,\n} from \"../slices/saveSlice\";\nimport { max } from \"../utils/array\";\nimport { D } from \"../utils/decimal\";\nimport {\n  useAppDispatch,\n  useAppSelector,\n  useSelectInvItem,\n} from \"../utils/hooks\";\n\nexport const Shop = () => {\n  const dispatch = useAppDispatch();\n\n  const isBought = useAppSelector((state) => state.save.itemBought);\n  const money = useAppSelector((state) => state.save.money);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const upgrade = useAppSelector((state) => state.save.upgrade);\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n\n  const selectInvItem = useSelectInvItem();\n\n  function handleClick(index: number) {\n    if (clickedShop) return;\n    const DecMoney = D(money);\n    if (isBought[index]) {\n      if (\n        inventory.length === invMax ||\n        inventory.length < shopContents[index].paramCount\n      )\n        return;\n      const price = D(shopContents[index].price);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(clickShop(index));\n      // auto-click number\n      if (upgrade[2] !== 0)\n        setTimeout(\n          () => selectInvItem(max(inventory).index, index),\n          (3 - upgrade[2]) * 250\n        );\n    } else {\n      const price = D(shopContents[index].unlockPrice);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(buyOrSellShopItem(index));\n    }\n  }\n\n  const shopItems = (\n    <div id=\"shopItems\">\n      {shopContents.map((item, index) => {\n        return (\n          <ShopItem\n            content={item}\n            isOpen={isBought[index]}\n            isClicked={index === clickedShop}\n            onClick={() => handleClick(index)}\n            cannotClick={\n              clickedShop !== undefined ||\n              (isBought[index]\n                ? D(shopContents[index].price).gt(money) ||\n                  inventory.length === invMax ||\n                  inventory.length < item.paramCount\n                : D(shopContents[index].unlockPrice).gt(money))\n            }\n            key={index}></ShopItem>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div id=\"shop\" className=\"tab\">\n      <h3 className=\"title\" onClick={() => dispatch(clearClicked())}>\n        Shop - Press Here or Esc to Reset\n      </h3>\n      {shopItems}\n    </div>\n  );\n};\n","import Decimal from \"decimal.js\";\nimport { D } from \"./decimal\";\n\nexport const max = (arr: Array<Decimal.Value>) => {\n  if (arr.length === 0) return { index: 0, value: D(0) };\n  return arr.reduce(\n    (acc, v, i) => {\n      if (D(acc.value).lt(v)) {\n        acc.index = i;\n        acc.value = v;\n      }\n      return acc;\n    },\n    { index: 0, value: arr[0] }\n  );\n};\n","import React from \"react\";\nimport { UpgradeButton } from \"../components/upgradeButton\";\nimport { maxDigit } from \"../constants/numbers\";\nimport { IUpgrade, upgrades } from \"../constants/upgrades\";\nimport { buyUpgrade, sellUpgrade, setMoney } from \"../slices/saveSlice\";\nimport { D, setMaxDigit } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Upgrades = () => {\n  const dispatch = useAppDispatch();\n\n  const upgrade = useAppSelector((state) => state.save.upgrade);\n  const money = useAppSelector((state) => state.save.money);\n  const save = useAppSelector((state) => state.save);\n\n  const handleBuy = (v: IUpgrade, i: number) => {\n    if (upgrade[i] >= v.count) return;\n    const price = D(v.price(upgrade[i]));\n    if (price.gt(money)) return;\n    dispatch(setMoney(D(money).sub(price).toString()));\n    dispatch(buyUpgrade(i));\n    if (v.action) dispatch(v.action(upgrade[i], save));\n  };\n  const handleSell = (v: IUpgrade, i: number) => {\n    if (upgrade[i] <= 0) return;\n    const price = D(v.price(upgrade[i] - 1));\n    dispatch(setMoney(D(price).mul(0.5).add(money).toString()));\n    dispatch(sellUpgrade(i));\n    if (v.sellAction) dispatch(v.sellAction(upgrade[i], save));\n  };\n\n  const upgradeBtns = upgrades.map((v, i) => {\n    return (\n      <UpgradeButton\n        content={`${v.content} - ${upgrade[i]}/${v.count}\\nCost : ${\n          upgrade[i] >= v.count\n            ? \"LVL MAX\"\n            : setMaxDigit(v.price(upgrade[i]), maxDigit)\n        }`}\n        onBuy={() => handleBuy(v, i)}\n        buyClassName={`buyUpgrade ${\n          D(v.price(upgrade[i])).gt(money) || upgrade[i] === v.count\n            ? \"cannotClick\"\n            : \"\"\n        } ${upgrade[i] >= v.count ? \"max\" : \"\"}`}\n        onSell={() => handleSell(v, i)}\n        sellClassName={`sellUpgrade ${upgrade[i] <= 0 ? \"cannotClick\" : \"\"}`}\n        key={i}></UpgradeButton>\n    );\n  });\n\n  return (\n    <div id=\"upgrades\" className=\"tab\">\n      <h3 className=\"title\">Upgrades</h3>\n      <div id=\"upgradesGrid\">{upgradeBtns}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { UpgradeButton } from \"../components/upgradeButton\";\nimport { maxDigit } from \"../constants/numbers\";\nimport {\n  IPrestigeUpgrade,\n  prestigeUpgrades,\n} from \"../constants/prestigeUpgrades\";\nimport { buyPPUpgrade, resetProgress, setPP } from \"../slices/saveSlice\";\nimport { D, setMaxDigit } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Prestige = () => {\n  const dispatch = useAppDispatch();\n\n  const money = useAppSelector((state) => state.save.money);\n  const pp = useAppSelector((state) => state.save.pp);\n  const ppUpgrade = useAppSelector((state) => state.save.ppUpgrade);\n  const save = useAppSelector((state) => state.save);\n\n  const ppToGet = (() => {\n    const pp = D(money).log(10).log(2).floor();\n    return pp.isNaN() ? 0 : pp.toString();\n  })();\n\n  const handlePrestige = () => {\n    if (D(money).gt(\"1e6\")) return;\n    dispatch(resetProgress(0));\n    dispatch(setPP(D(pp).add(ppToGet).toString()));\n  };\n\n  const handleBuyUpgrade = (v: IPrestigeUpgrade, i: number) => {\n    if (ppUpgrade[i] >= v.count) return;\n    const price = D(v.price(ppUpgrade[i]));\n    if (price.gt(pp)) return;\n    dispatch(setPP(D(pp).sub(price).toString()));\n    dispatch(buyPPUpgrade(i));\n    if (v.action) dispatch(v.action(ppUpgrade[i], save));\n  };\n\n  const upgradeBtns = prestigeUpgrades.map((v, i) => {\n    return (\n      <UpgradeButton\n        content={`${v.content} - ${ppUpgrade[i]}/${v.count}\\nCost : ${\n          ppUpgrade[i] >= v.count\n            ? \"LVL MAX\"\n            : setMaxDigit(v.price(ppUpgrade[i]), maxDigit)\n        }`}\n        onBuy={() => handleBuyUpgrade(v, i)}\n        buyClassName={`ppUpgrade ${\n          D(v.price(ppUpgrade[i])).gt(pp) || ppUpgrade[i] === v.count\n            ? \"cannotClick\"\n            : \"\"\n        } ${ppUpgrade[i] >= v.count ? \"max\" : \"\"}`}\n        key={i}></UpgradeButton>\n    );\n  });\n\n  return (\n    <div id=\"prestige\" className=\"tab\">\n      <h3 className=\"title\">Prestige</h3>\n      <button\n        id=\"prestigeButton\"\n        onClick={handlePrestige}\n        className={`${D(money).gt(\"1e6\") ? \"\" : \"cannotClick\"}`}>\n        {D(money).gt(\"1e6\")\n          ? `Prestige to get ${ppToGet} PP`\n          : \"At least 1e+6 money to prestige\"}\n      </button>\n      <div id=\"ppUpgrades\">\n        <h4>Upgrades</h4>\n        <div id=\"ppUpgradeGrid\">{upgradeBtns}</div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ResetButton } from \"../components/ResetButton\";\nimport { resetProgress } from \"../slices/saveSlice\";\nimport { useAppDispatch } from \"../utils/hooks\";\n\nexport const Options = () => {\n  const dispatch = useAppDispatch();\n\n  const reset = () => {\n    dispatch(resetProgress(1000));\n  };\n\n  return (\n    <div id=\"options\" className=\"tab\">\n      <h3 className=\"title\">Option</h3>\n      <ResetButton reset={reset}></ResetButton>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const InvItem = ({\n  content,\n  cannotClick,\n  onClick,\n}: {\n  content: string;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`invItem ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { InvItem } from \"../components/invItem\";\nimport { maxDigit } from \"../constants/numbers\";\nimport { setMaxDigit } from \"../utils/decimal\";\nimport { useAppSelector, useSelectInvItem } from \"../utils/hooks\";\n\nexport const Inventory = () => {\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const money = useAppSelector((state) => state.save.money);\n  const pp = useAppSelector((state) => state.save.pp);\n\n  const handleClick = useSelectInvItem();\n\n  return (\n    <div id=\"inventory\" className=\"tab\">\n      <h3 className=\"title\">\n        Inventory - {inventory.length} / {invMax}\n      </h3>\n      <div id=\"displayer\">\n        <h3 className=\"money\">Money : {setMaxDigit(money, maxDigit)}</h3>\n        <h3 className=\"pp\">PP : {pp}</h3>\n      </div>\n      <div id=\"invItems\">\n        {inventory.map((item, index) => {\n          return (\n            <InvItem\n              content={setMaxDigit(item, maxDigit)}\n              cannotClick={\n                clickedShop === undefined ||\n                (clickedNumber !== undefined && clickedNumber.includes(index))\n              }\n              onClick={() => handleClick(index)}\n              key={index}></InvItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import Decimal from \"decimal.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { tabs } from \"./constants/tabs\";\nimport { Inventory } from \"./containers/inventory\";\nimport {\n  addNumber,\n  clearClicked,\n  removeNumberByIndex,\n  setMoney,\n  unlockTab,\n} from \"./slices/saveSlice\";\nimport { D } from \"./utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"./utils/hooks\";\n\nfunction Game() {\n  const dispatch = useAppDispatch();\n\n  const [curTab, setTab] = useState(0);\n\n  const save = useAppSelector((state) => state.save);\n  const inv = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const money = useAppSelector((state) => state.save.money);\n  const startingNumber = useAppSelector((state) => state.save.startingNumber);\n  const tabUnlocked = useAppSelector((state) => state.save.tabUnlocked);\n\n  const handleSellAll = useCallback(() => {\n    let moneyToAdd = D(\"0\");\n    for (let i = inv.length - 1; i > 0; i--) {\n      moneyToAdd = moneyToAdd.add(inv[i]);\n      dispatch(removeNumberByIndex(i));\n    }\n    dispatch(removeNumberByIndex(0));\n    dispatch(addNumber(startingNumber));\n    dispatch(setMoney(Decimal.add(money, moneyToAdd).toString()));\n  }, [dispatch, inv, money, startingNumber]);\n\n  // auto sell when inventory is full\n  const autoUpgrade = useAppSelector((state) => state.save.upgrade[3]);\n  useEffect(() => {\n    if (autoUpgrade !== 1) return;\n    if (inv.length === invMax) {\n      handleSellAll();\n    }\n  }, [inv, invMax, handleSellAll, autoUpgrade]);\n\n  useEffect(() => {\n    tabs.forEach((v, i) => {\n      if (tabUnlocked[i]) return;\n      if (v.condition ? v.condition(save) : true) dispatch(unlockTab(i));\n    });\n  }, [save, dispatch, tabUnlocked]);\n\n  const tabNavs = (\n    <div id=\"tabNavs\">\n      {tabs.map((v, i) => {\n        if (!tabUnlocked[i]) return true;\n        return (\n          <span\n            className={`tabNav ${i === curTab ? \"selected\" : \"\"}`}\n            onClick={() => setTab(i)}\n            key={i}>\n            {v.name}\n          </span>\n        );\n      })}\n    </div>\n  );\n\n  const Abc = tabs[curTab].tab;\n\n  const _handleKeyDown = (event: KeyboardEvent) => {\n    switch (event.key) {\n      case \"Esc\":\n      case \"Escape\":\n        dispatch(clearClicked());\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", _handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", _handleKeyDown);\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      {tabNavs}\n      <Abc />\n      <Inventory />\n      <div id=\"bottomBar\">\n        <button onClick={handleSellAll}>\n          <h2>Sell All</h2>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","// From https://github.com/spotky1004/Bunch-of-Achievements/blob/main/src/util/SaveLoad.js\n\nexport function mergeObject(target: any, source: any) {\n  target = target ?? {};\n  for (const i in source) {\n    if (Array.isArray(source[i])) {\n      target[i] = target[i] ?? [];\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\nexport function mergeArray(target: Array<any>, source: Array<any>) {\n  for (let i = 0, l = source.length; i < l; i++) {\n    if (Array.isArray(source[i])) {\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport saveReducer, {\n  initialState as saveInitialState,\n} from \"./slices/saveSlice\";\nimport { mergeObject } from \"./utils/merge\";\n\nconst persistedState = JSON.parse(\n  localStorage.getItem(\"notAMergeGame\") || \"{}\"\n);\n\nconst store = configureStore({\n  reducer: {\n    save: saveReducer,\n  },\n  preloadedState: mergeObject(persistedState, { save: saveInitialState }),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notAMergeGame\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}