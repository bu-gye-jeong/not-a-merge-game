{"version":3,"sources":["components/ResetButton.tsx","constants/countToReset.tsx","constants/shopContents.tsx","slices/saveSlice.tsx","utils/hooks.tsx","components/shopItem.tsx","constants/tabs.tsx","containers/shop.tsx","containers/options.tsx","components/invItem.tsx","containers/inventory.tsx","Game.tsx","utils/merge.tsx","store.tsx","index.tsx"],"names":["ResetButton","reset","useState","count","setCount","onClick","className","shopContents","paramCount","exp","calc","num","unlockPrice","price","initialState","inventory","invMax","itemBought","Array","length","fill","money","saveSlice","createSlice","name","reducers","addNumber","state","action","push","payload","removeNumberByIndex","splice","buyOrSellShopItem","changeInvMax","slice","addMoney","clearClicked","clickedNumber","clickedShop","clickShop","clickNumber","hardReset","localStorage","removeItem","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","ShopItem","content","isOpen","isClicked","cannotClick","tabs","tab","dispatch","isBought","save","shopItems","id","map","item","index","handleClick","undefined","InvItem","Inventory","includes","shopContent","calcParam","v","Game","curTab","setTab","inv","tabNavs","i","Abc","mergeObject","target","source","isArray","mergeArray","constructor","l","persistedState","JSON","parse","getItem","store","configureStore","reducer","saveReducer","preloadedState","saveInitialState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56912338.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport { countToReset } from \"../constants/countToReset\";\n\nexport const ResetButton = ({ reset }: { reset(): void }) => {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    if (countToReset - count <= 1) {\n      reset();\n      setCount(0);\n      return;\n    }\n    setCount(count + 1);\n  };\n\n  return (\n    <button onClick={handleClick} className=\"plainButton\">\n      Press {countToReset - count} more time to <b>HARD RESET</b>\n    </button>\n  );\n};\n","export const countToReset = 5;\n","// Shop Contents\n\nexport interface IShopContent {\n  paramCount: number;\n  exp: string;\n  calc(...num: number[]): number;\n  unlockPrice: number;\n  price: number;\n}\n\nexport const shopContents: IShopContent[] = [\n  {\n    paramCount: 1,\n    exp: \"x+1\",\n    calc: (num) => num + 1,\n    unlockPrice: 0,\n    price: 0,\n  },\n  {\n    paramCount: 1,\n    exp: \"2x\",\n    calc: (num) => num * 2,\n    unlockPrice: 100,\n    price: 10,\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { shopContents } from \"../constants/shopContents\";\n\ninterface ISaveState {\n  inventory: number[];\n  invMax: number;\n  itemBought: boolean[];\n  money: number;\n  clickedShop?: number;\n  clickedNumber?: number[];\n}\n\nexport const initialState = {\n  inventory: [1],\n  invMax: 5,\n  itemBought: new Array(shopContents.length).fill(false),\n  money: 0,\n} as ISaveState;\n\nconst saveSlice = createSlice({\n  name: \"save\",\n  initialState,\n  reducers: {\n    addNumber(state, action: PayloadAction<number>) {\n      if (state.invMax > state.inventory.length)\n        state.inventory.push(action.payload);\n    },\n    removeNumberByIndex(state, action: PayloadAction<number>) {\n      if (0 <= action.payload && action.payload < state.invMax)\n        state.inventory.splice(action.payload, 1);\n    },\n    buyOrSellShopItem(state, action: PayloadAction<number>) {\n      state.itemBought[action.payload] = !state.itemBought[action.payload];\n    },\n    changeInvMax(state, action: PayloadAction<number>) {\n      state.invMax = action.payload;\n      state.inventory = state.inventory.slice(0, state.invMax);\n    },\n    addMoney(state, action: PayloadAction<number>) {\n      state.money += action.payload;\n    },\n    clearClicked(state, action: PayloadAction) {\n      delete state.clickedNumber;\n      delete state.clickedShop;\n    },\n    clickShop(state, action: PayloadAction<number>) {\n      state.clickedShop = action.payload;\n    },\n    clickNumber(state, action: PayloadAction<number>) {\n      if (!state.clickedNumber) {\n        state.clickedNumber = [];\n      }\n      state.clickedNumber.push(action.payload);\n    },\n    hardReset(state, action: PayloadAction) {\n      state.invMax = initialState.invMax;\n      state.inventory = initialState.inventory;\n      state.itemBought = initialState.itemBought;\n      state.money = initialState.money;\n      delete state.clickedNumber;\n      delete state.clickedShop;\n      localStorage.removeItem(\"notAMergeGame\");\n    },\n  },\n});\n\nexport const {\n  addNumber,\n  removeNumberByIndex,\n  buyOrSellShopItem,\n  changeInvMax,\n  addMoney,\n  clearClicked,\n  clickNumber,\n  clickShop,\n  hardReset,\n} = saveSlice.actions;\n\nexport default saveSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport { IShopContent } from \"../constants/shopContents\";\n\nexport const ShopItem = ({\n  content,\n  isOpen,\n  isClicked,\n  cannotClick,\n  onClick,\n}: {\n  content: IShopContent;\n  isOpen: boolean;\n  isClicked: boolean;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`shopItem \n            ${isClicked ? \"clicked\" : \"\"}\n            ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {isOpen ? <span className=\"exp\">{content.exp}</span> : \"\"}\n      {isOpen\n        ? \" - Cost : \" + content.price\n        : content.unlockPrice + \" to unlock\"}\n    </button>\n  );\n};\n","import { Options } from \"../containers/options\";\nimport { Shop } from \"../containers/shop\";\n\n// Tabs\ninterface ITab {\n  name: string;\n  tab: () => JSX.Element;\n}\n\nexport const tabs: ITab[] = [\n  { name: \"shop\", tab: Shop },\n  { name: \"option\", tab: Options },\n];\n","import React from \"react\";\nimport { ShopItem } from \"../components/shopItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addMoney, buyOrSellShopItem, clickShop } from \"../slices/saveSlice\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Shop = () => {\n  const dispatch = useAppDispatch();\n\n  const isBought = useAppSelector((state) => state.save.itemBought);\n  const money = useAppSelector((state) => state.save.money);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n\n  function handleClick(index: number) {\n    if (isBought[index]) {\n      const price = shopContents[index].price;\n      if (price > money) return;\n      dispatch(addMoney(-price));\n      dispatch(clickShop(index));\n    } else {\n      const price = shopContents[index].unlockPrice;\n      if (price > money) return;\n      dispatch(addMoney(-price));\n      dispatch(buyOrSellShopItem(index));\n    }\n  }\n\n  const shopItems = (\n    <div id=\"shopItems\">\n      {shopContents.map((item, index) => {\n        return (\n          <ShopItem\n            content={item}\n            isOpen={isBought[index]}\n            isClicked={index === clickedShop}\n            onClick={() => handleClick(index)}\n            cannotClick={\n              clickedShop !== undefined ||\n              (isBought[index] && shopContents[index].price > money) ||\n              (!isBought[index] && shopContents[index].unlockPrice > money)\n            }\n            key={index}></ShopItem>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div id=\"shop\" className=\"tab\">\n      <h3 className=\"title\">Shop</h3>\n      {shopItems}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ResetButton } from \"../components/ResetButton\";\nimport { hardReset } from \"../slices/saveSlice\";\nimport { useAppDispatch } from \"../utils/hooks\";\n\nexport const Options = () => {\n  const dispatch = useAppDispatch();\n\n  const reset = () => {\n    dispatch(hardReset());\n  };\n\n  return (\n    <div id=\"options\" className=\"tab\">\n      <ResetButton reset={reset}></ResetButton>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const InvItem = ({\n  content,\n  cannotClick,\n  onClick,\n}: {\n  content: number;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`invItem ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { InvItem } from \"../components/invItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addNumber, clearClicked, clickNumber } from \"../slices/saveSlice\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Inventory = () => {\n  const dispatch = useAppDispatch();\n\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const money = useAppSelector((state) => state.save.money);\n\n  const handleClick = (index: number) => {\n    if (\n      clickedShop === undefined ||\n      (clickedNumber !== undefined && clickedNumber.includes(index))\n    )\n      return;\n    const shopContent = shopContents[clickedShop!];\n    if (clickedNumber?.length ?? 0 + 1 < shopContent.paramCount)\n      return dispatch(clickNumber(index));\n    const calcParam = clickedNumber\n      ? [...clickedNumber, index].map((v) => inventory[v])\n      : [inventory[index]];\n    dispatch(addNumber(shopContent.calc(...calcParam)));\n    dispatch(clearClicked());\n  };\n\n  return (\n    <div id=\"inventory\" className=\"tab\">\n      <h3 className=\"title\">\n        Inventory - {inventory.length} / {invMax}\n      </h3>\n      <h3 id=\"resourceDisplayer\">Money : {money}</h3>\n      <div id=\"invItems\">\n        {inventory.map((item, index) => {\n          return (\n            <InvItem\n              content={item}\n              cannotClick={\n                clickedShop === undefined ||\n                (clickedNumber !== undefined && clickedNumber.includes(index))\n              }\n              onClick={() => handleClick(index)}\n              key={index}></InvItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { tabs } from \"./constants/tabs\";\nimport { Inventory } from \"./containers/inventory\";\nimport { removeNumberByIndex, addMoney } from \"./slices/saveSlice\";\nimport { useAppDispatch, useAppSelector } from \"./utils/hooks\";\n\nfunction Game() {\n  const dispatch = useAppDispatch();\n\n  const [curTab, setTab] = useState(0);\n\n  const inv = useAppSelector((state) => state.save.inventory);\n\n  const handleSellAll = () => {\n    let money = 0;\n    for (let i = inv.length - 1; i > 0; i--) {\n      money += inv[i];\n      dispatch(removeNumberByIndex(i));\n    }\n    dispatch(addMoney(money));\n  };\n\n  const tabNavs = (\n    <div id=\"tabNavs\">\n      {tabs.map((v, i) => (\n        <span className=\"tabNav\" onClick={() => setTab(i)} key={i}>\n          {v.name}\n        </span>\n      ))}\n    </div>\n  );\n\n  const Abc = tabs[curTab].tab;\n\n  return (\n    <div className=\"App\">\n      {tabNavs}\n      <Abc />\n      <Inventory />\n      <div id=\"bottomBar\">\n        <button onClick={handleSellAll}>\n          <h2>Sell All</h2>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","// From https://github.com/spotky1004/Bunch-of-Achievements/blob/main/src/util/SaveLoad.js\n\nexport function mergeObject(target: any, source: any) {\n  target = target ?? {};\n  for (const i in source) {\n    if (Array.isArray(source[i])) {\n      target[i] = target[i] ?? [];\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\nexport function mergeArray(target: Array<any>, source: Array<any>) {\n  for (let i = 0, l = source.length; i < l; i++) {\n    if (Array.isArray(source[i])) {\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport saveReducer, {\n  initialState as saveInitialState,\n} from \"./slices/saveSlice\";\nimport { mergeObject } from \"./utils/merge\";\n\nconst persistedState = JSON.parse(\n  localStorage.getItem(\"notAMergeGame\") || \"{}\"\n);\n\nconst store = configureStore({\n  reducer: {\n    save: saveReducer,\n  },\n  preloadedState: mergeObject(persistedState, { save: saveInitialState }),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notAMergeGame\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}