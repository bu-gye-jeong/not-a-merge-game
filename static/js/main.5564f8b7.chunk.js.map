{"version":3,"sources":["components/ResetButton.tsx","constants/numbers.tsx","utils/decimal.tsx","constants/shopContents.tsx","constants/upgrades.tsx","slices/saveSlice.tsx","utils/hooks.tsx","components/shopItem.tsx","components/upgradeButton.tsx","constants/tabs.tsx","containers/shop.tsx","utils/array.tsx","containers/upgrades.tsx","containers/options.tsx","components/invItem.tsx","containers/inventory.tsx","Game.tsx","utils/merge.tsx","store.tsx","index.tsx"],"names":["ResetButton","reset","useState","count","setCount","onClick","id","className","D","$","Decimal","setMaxDigit","value","digit","num","toPrecision","includes","replace","shopContents","paramCount","exp","calc","add","toString","unlockPrice","price","mul","num1","num2","pow","upgrades","content","action","startingNumber","setStartingNumber","sellAction","div","invMax","setInvMax","initialState","inventory","itemBought","Array","length","fill","money","upgrade","saveSlice","createSlice","name","reducers","addNumber","state","push","payload","removeNumberByIndex","splice","buyOrSellShopItem","slice","setMoney","clearClicked","clickedNumber","clickedShop","clickShop","clickNumber","hardReset","localStorage","removeItem","buyUpgrade","sellUpgrade","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","useSelectInvItem","save","dispatch","index","shopIndex","undefined","shopContent","calcParam","map","v","ShopItem","isOpen","isClicked","cannotClick","ReactHtmlParser","UpgradeButton","onBuy","onSell","buyClassName","sellClassName","split","line","i","tabs","tab","isBought","selectInvItem","handleClick","DecMoney","gt","sub","setTimeout","arr","reduce","acc","lt","shopItems","item","upgradeBtns","handleBuy","handleSell","InvItem","Inventory","Game","curTab","setTab","inv","handleSellAll","useCallback","moneyToAdd","autoUpgrade","useEffect","tabNavs","Abc","_handleKeyDown","event","key","document","addEventListener","removeEventListener","mergeObject","target","source","isArray","mergeArray","constructor","l","persistedState","JSON","parse","getItem","store","configureStore","reducer","saveReducer","preloadedState","saveInitialState","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5564f8b7.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport { countToReset } from \"../constants/numbers\";\n\nexport const ResetButton = ({ reset }: { reset(): void }) => {\n  const [count, setCount] = useState(0);\n\n  const handleClick = () => {\n    if (countToReset - count <= 1) {\n      reset();\n      setCount(0);\n      return;\n    }\n    setCount(count + 1);\n  };\n\n  return (\n    <button onClick={handleClick} id=\"resetButton\" className=\"plainButton\">\n      Press {countToReset - count} more time to <b>HARD RESET</b>\n    </button>\n  );\n};\n","export const countToReset = 5;\n\nexport const maxDigit = 5;\n","import Decimal from \"decimal.js\";\n\nexport const D = ($: Decimal.Value) => new Decimal($);\n\nexport const setMaxDigit = (value: Decimal.Value, digit: number) => {\n  const num = D(value).toPrecision(5);\n\n  if (num.includes(\"e\")) {\n    return num.replace(/0+(?=e)/g, \"\").replace(/\\.(?=e)/g, \"\");\n  } else {\n    return num.replace(/(\\..*?)0+$/, \"$1\").replace(/\\.$/, \"\");\n  }\n};\n","// Shop Contents\n\nimport { D } from \"../utils/decimal\";\n\nexport interface IShopContent {\n  paramCount: number;\n  exp: string;\n  calc(...num: string[]): string;\n  unlockPrice: string;\n  price: string;\n}\n\nexport const shopContents: IShopContent[] = [\n  {\n    paramCount: 1,\n    exp: \"x+1\",\n    calc: (num) => D(num).add(1).toString(),\n    unlockPrice: \"0\",\n    price: \"0\",\n  },\n  {\n    paramCount: 1,\n    exp: \"2x\",\n    calc: (num) => D(num).mul(2).toString(),\n    unlockPrice: \"100\",\n    price: \"10\",\n  },\n  {\n    paramCount: 2,\n    exp: \"2x+y\",\n    calc: (num1, num2) => D(num1).mul(2).add(num2).toString(),\n    unlockPrice: \"300\",\n    price: \"40\",\n  },\n  {\n    paramCount: 1,\n    exp: \"3x\",\n    calc: (num) => D(num).mul(3).toString(),\n    unlockPrice: \"2000\",\n    price: \"100\",\n  },\n  {\n    paramCount: 1,\n    exp: \"x<sup>1.2</sup>\",\n    calc: (num) => D(num).pow(1.2).toString(),\n    unlockPrice: \"100000\",\n    price: \"5000\",\n  },\n];\n","import Decimal from \"decimal.js\";\nimport { setInvMax, setStartingNumber, ISaveState } from \"../slices/saveSlice\";\n\nexport interface IUpgrade {\n  count: number;\n  content: string;\n  price(count: number): string;\n  action?(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n  sellAction?(\n    count: number,\n    save: ISaveState\n  ): {\n    payload?: any;\n    type: string;\n  };\n}\n\nexport const upgrades: IUpgrade[] = [\n  {\n    count: 4,\n    content: \"Multiply 2 to starting number\",\n    price: (count) =>\n      Decimal.pow(10, count + 1)\n        .mul(10)\n        .toString(),\n    action: (count, { startingNumber }) =>\n      setStartingNumber(Decimal.mul(startingNumber, 2).toString()),\n    sellAction: (count, { startingNumber }) =>\n      setStartingNumber(Decimal.div(startingNumber, 2).toString()),\n  },\n  {\n    count: 5,\n    content: \"Expand inventory\",\n    price: (count) => Decimal.pow(1000, count).mul(30).toString(),\n    action: (count, { invMax }) => setInvMax(invMax + 1),\n    sellAction: (count, { invMax }) => setInvMax(invMax - 1),\n  },\n  {\n    count: 3,\n    content: \"Auto-select the greatest number\",\n    price: (count) => Decimal.pow(100, count).mul(5000).toString(),\n  },\n  {\n    count: 1,\n    content: \"Auto-sell when inventory is full\",\n    price: () => \"300000\",\n  },\n];\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { upgrades } from \"../constants/upgrades\";\n\nexport interface ISaveState {\n  inventory: string[];\n  invMax: number;\n  itemBought: boolean[];\n  money: string;\n  startingNumber: string;\n  upgrade: number[];\n  clickedShop?: number;\n  clickedNumber?: number[];\n}\n\nexport const initialState = {\n  inventory: [\"1\"],\n  invMax: 5,\n  itemBought: new Array(shopContents.length).fill(false),\n  money: \"0\",\n  startingNumber: \"1\",\n  upgrade: new Array(upgrades.length).fill(0),\n} as ISaveState;\n\nconst saveSlice = createSlice({\n  name: \"save\",\n  initialState,\n  reducers: {\n    addNumber(state, action: PayloadAction<string>) {\n      if (state.invMax > state.inventory.length)\n        state.inventory.push(action.payload);\n    },\n    removeNumberByIndex(state, action: PayloadAction<number>) {\n      if (0 <= action.payload && action.payload < state.invMax)\n        state.inventory.splice(action.payload, 1);\n    },\n    buyOrSellShopItem(state, action: PayloadAction<number>) {\n      state.itemBought[action.payload] = !state.itemBought[action.payload];\n    },\n    setInvMax(state, action: PayloadAction<number>) {\n      state.invMax = action.payload;\n      state.inventory = state.inventory.slice(0, state.invMax);\n    },\n    setMoney(state, action: PayloadAction<string>) {\n      state.money = action.payload;\n    },\n    clearClicked(state, action: PayloadAction) {\n      delete state.clickedNumber;\n      delete state.clickedShop;\n    },\n    clickShop(state, action: PayloadAction<number>) {\n      state.clickedShop = action.payload;\n    },\n    clickNumber(state, action: PayloadAction<number>) {\n      if (!state.clickedNumber) {\n        state.clickedNumber = [];\n      }\n      state.clickedNumber.push(action.payload);\n    },\n    hardReset(state) {\n      state.invMax = initialState.invMax;\n      state.inventory = initialState.inventory;\n      state.itemBought = initialState.itemBought;\n      state.money = initialState.money;\n      state.startingNumber = initialState.startingNumber;\n      state.upgrade = initialState.upgrade;\n      delete state.clickedNumber;\n      delete state.clickedShop;\n      localStorage.removeItem(\"notAMergeGame\");\n    },\n    setStartingNumber(state, action: PayloadAction<string>) {\n      state.startingNumber = action.payload;\n    },\n    buyUpgrade(state, action: PayloadAction<number>) {\n      state.upgrade[action.payload] += 1;\n    },\n    sellUpgrade(state, action: PayloadAction<number>) {\n      state.upgrade[action.payload] -= 1;\n    },\n  },\n});\n\nexport const {\n  addNumber,\n  removeNumberByIndex,\n  buyOrSellShopItem,\n  setInvMax,\n  setMoney,\n  clearClicked,\n  clickNumber,\n  clickShop,\n  hardReset,\n  setStartingNumber,\n  buyUpgrade,\n  sellUpgrade,\n} = saveSlice.actions;\n\nexport default saveSlice.reducer;\n","import { useRef, useEffect } from \"react\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { shopContents } from \"../constants/shopContents\";\nimport { addNumber, clearClicked, clickNumber } from \"../slices/saveSlice\";\nimport type { RootState, AppDispatch } from \"../store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n\nexport const useInterval = (\n  callback: (...args: any[]) => void,\n  delay: number\n) => {\n  const savedCallback = useRef<typeof callback>();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current!();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nexport const useSelectInvItem = () => {\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const dispatch = useAppDispatch();\n\n  return (index: number, shopIndex = clickedShop) => {\n    if (\n      shopIndex === undefined ||\n      (clickedNumber !== undefined && clickedNumber.includes(index))\n    )\n      return;\n    const shopContent = shopContents[shopIndex];\n    if ((clickedNumber?.length ?? 0) + 1 < shopContent.paramCount) {\n      dispatch(clickNumber(index));\n      return;\n    }\n    const calcParam = clickedNumber\n      ? [...clickedNumber, index].map((v) => inventory[v])\n      : [inventory[index]];\n    dispatch(addNumber(shopContent.calc(...calcParam)));\n    dispatch(clearClicked());\n  };\n};\n","import React from \"react\";\nimport { IShopContent } from \"../constants/shopContents\";\nimport ReactHtmlParser from \"react-html-parser\";\n\nexport const ShopItem = ({\n  content,\n  isOpen,\n  isClicked,\n  cannotClick,\n  onClick,\n}: {\n  content: IShopContent;\n  isOpen: boolean;\n  isClicked: boolean;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`shopItem \n            ${isClicked ? \"clicked\" : \"\"}\n            ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {isOpen ? (\n        <span className=\"exp\">{ReactHtmlParser(content.exp)}</span>\n      ) : (\n        \"\"\n      )}\n      {isOpen\n        ? \" - Cost : \" + content.price\n        : content.unlockPrice + \" to unlock\"}\n    </button>\n  );\n};\n","import React from \"react\";\n\nexport const UpgradeButton = ({\n  content,\n  onBuy,\n  onSell,\n  buyClassName,\n  sellClassName,\n}: {\n  content: string;\n  onBuy: React.MouseEventHandler<HTMLButtonElement>;\n  onSell: React.MouseEventHandler<HTMLButtonElement>;\n  buyClassName: string;\n  sellClassName: string;\n}) => {\n  return (\n    <div className=\"upgrade\">\n      <button className={buyClassName} onClick={onBuy}>\n        {content.split(\"\\n\").map((line, i) => {\n          return (\n            <span key={i}>\n              {line}\n              <br />\n            </span>\n          );\n        })}\n      </button>\n\n      <button className={sellClassName} onClick={onSell}>\n        Sell\n      </button>\n    </div>\n  );\n};\n","import { Options } from \"../containers/options\";\nimport { Shop } from \"../containers/shop\";\nimport { Upgrades } from \"../containers/upgrades\";\n\n// Tabs\ninterface ITab {\n  name: string;\n  tab: () => JSX.Element;\n}\n\nexport const tabs: ITab[] = [\n  { name: \"shop\", tab: Shop },\n  { name: \"upgrades\", tab: Upgrades },\n  { name: \"option\", tab: Options },\n];\n","import React from \"react\";\nimport { ShopItem } from \"../components/shopItem\";\nimport { shopContents } from \"../constants/shopContents\";\nimport {\n  setMoney,\n  buyOrSellShopItem,\n  clickShop,\n  clearClicked,\n} from \"../slices/saveSlice\";\nimport { max } from \"../utils/array\";\nimport { D } from \"../utils/decimal\";\nimport {\n  useAppDispatch,\n  useAppSelector,\n  useSelectInvItem,\n} from \"../utils/hooks\";\n\nexport const Shop = () => {\n  const dispatch = useAppDispatch();\n\n  const isBought = useAppSelector((state) => state.save.itemBought);\n  const money = useAppSelector((state) => state.save.money);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const upgrade = useAppSelector((state) => state.save.upgrade);\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n\n  const selectInvItem = useSelectInvItem();\n\n  function handleClick(index: number) {\n    if (\n      clickedShop ||\n      inventory.length === invMax ||\n      inventory.length < shopContents[index].paramCount\n    )\n      return;\n    const DecMoney = D(money);\n    if (isBought[index]) {\n      const price = D(shopContents[index].price);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(clickShop(index));\n      // auto-click number\n      if (upgrade[2] !== 0)\n        setTimeout(\n          () => selectInvItem(max(inventory).index, index),\n          (3 - upgrade[2]) * 250\n        );\n    } else {\n      const price = D(shopContents[index].unlockPrice);\n      if (price.gt(DecMoney)) return;\n      dispatch(setMoney(DecMoney.sub(price).toString()));\n      dispatch(buyOrSellShopItem(index));\n    }\n  }\n\n  const shopItems = (\n    <div id=\"shopItems\">\n      {shopContents.map((item, index) => {\n        return (\n          <ShopItem\n            content={item}\n            isOpen={isBought[index]}\n            isClicked={index === clickedShop}\n            onClick={() => handleClick(index)}\n            cannotClick={\n              clickedShop !== undefined ||\n              (isBought[index] && D(shopContents[index].price).gt(money)) ||\n              (!isBought[index] &&\n                D(shopContents[index].unlockPrice).gt(money)) ||\n              inventory.length === invMax ||\n              inventory.length < item.paramCount\n            }\n            key={index}></ShopItem>\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div id=\"shop\" className=\"tab\">\n      <h3 className=\"title\" onClick={() => dispatch(clearClicked())}>\n        Shop - Press Here or Esc to Reset\n      </h3>\n      {shopItems}\n    </div>\n  );\n};\n","import Decimal from \"decimal.js\";\nimport { D } from \"./decimal\";\n\nexport const max = (arr: Array<Decimal.Value>) => {\n  if (arr.length === 0) return { index: 0, value: D(0) };\n  return arr.reduce(\n    (acc, v, i) => {\n      if (D(acc.value).lt(v)) {\n        acc.index = i;\n        acc.value = v;\n      }\n      return acc;\n    },\n    { index: 0, value: arr[0] }\n  );\n};\n","import React from \"react\";\nimport { UpgradeButton } from \"../components/upgradeButton\";\nimport { maxDigit } from \"../constants/numbers\";\nimport { IUpgrade, upgrades } from \"../constants/upgrades\";\nimport { buyUpgrade, sellUpgrade, setMoney } from \"../slices/saveSlice\";\nimport { D, setMaxDigit } from \"../utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"../utils/hooks\";\n\nexport const Upgrades = () => {\n  const dispatch = useAppDispatch();\n\n  const upgrade = useAppSelector((state) => state.save.upgrade);\n  const money = useAppSelector((state) => state.save.money);\n  const save = useAppSelector((state) => state.save);\n\n  const handleBuy = (v: IUpgrade, i: number) => {\n    if (upgrade[i] >= v.count) return;\n    const price = D(v.price(upgrade[i]));\n    if (price.gt(money)) return;\n    dispatch(setMoney(D(money).sub(price).toString()));\n    dispatch(buyUpgrade(i));\n    if (v.action) dispatch(v.action(upgrade[i], save));\n  };\n  const handleSell = (v: IUpgrade, i: number) => {\n    if (upgrade[i] <= 0) return;\n    const price = D(v.price(upgrade[i] - 1));\n    dispatch(setMoney(D(price).mul(0.5).add(money).toString()));\n    dispatch(sellUpgrade(i));\n    if (v.sellAction) dispatch(v.sellAction(upgrade[i], save));\n  };\n\n  const upgradeBtns = upgrades.map((v, i) => {\n    return (\n      <UpgradeButton\n        content={`${v.content} - ${upgrade[i]}/${v.count}\\nCost : ${\n          upgrade[i] >= v.count\n            ? \"LVL MAX\"\n            : setMaxDigit(v.price(upgrade[i]), maxDigit)\n        }`}\n        onBuy={() => handleBuy(v, i)}\n        buyClassName={`buyUpgrade ${\n          D(v.price(upgrade[i])).gt(money) || upgrade[i] === v.count\n            ? \"cannotClick\"\n            : \"\"\n        } ${upgrade[i] >= v.count ? \"max\" : \"\"}`}\n        onSell={() => handleSell(v, i)}\n        sellClassName={`sellUpgrade ${upgrade[i] <= 0 ? \"cannotClick\" : \"\"}`}\n        key={i}></UpgradeButton>\n    );\n  });\n\n  return (\n    <div id=\"upgrades\" className=\"tab\">\n      <h3 className=\"title\">Upgrades</h3>\n      <div id=\"upgradesGrid\">{upgradeBtns}</div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ResetButton } from \"../components/ResetButton\";\nimport { hardReset } from \"../slices/saveSlice\";\nimport { useAppDispatch } from \"../utils/hooks\";\n\nexport const Options = () => {\n  const dispatch = useAppDispatch();\n\n  const reset = () => {\n    dispatch(hardReset());\n  };\n\n  return (\n    <div id=\"options\" className=\"tab\">\n      <h3 className=\"title\">Option</h3>\n      <ResetButton reset={reset}></ResetButton>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const InvItem = ({\n  content,\n  cannotClick,\n  onClick,\n}: {\n  content: string;\n  cannotClick: boolean;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}) => {\n  return (\n    <button\n      className={`invItem ${cannotClick ? \"cannotClick\" : \"\"}`}\n      onClick={onClick}>\n      {content}\n    </button>\n  );\n};\n","import React from \"react\";\nimport { InvItem } from \"../components/invItem\";\nimport { maxDigit } from \"../constants/numbers\";\nimport { setMaxDigit } from \"../utils/decimal\";\nimport { useAppSelector, useSelectInvItem } from \"../utils/hooks\";\n\nexport const Inventory = () => {\n  const inventory = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const clickedShop = useAppSelector((state) => state.save.clickedShop);\n  const clickedNumber = useAppSelector((state) => state.save.clickedNumber);\n  const money = useAppSelector((state) => state.save.money);\n\n  const handleClick = useSelectInvItem();\n\n  return (\n    <div id=\"inventory\" className=\"tab\">\n      <h3 className=\"title\">\n        Inventory - {inventory.length} / {invMax}\n      </h3>\n      <h3 id=\"resourceDisplayer\">Money : {setMaxDigit(money, maxDigit)}</h3>\n      <div id=\"invItems\">\n        {inventory.map((item, index) => {\n          return (\n            <InvItem\n              content={setMaxDigit(item, maxDigit)}\n              cannotClick={\n                clickedShop === undefined ||\n                (clickedNumber !== undefined && clickedNumber.includes(index))\n              }\n              onClick={() => handleClick(index)}\n              key={index}></InvItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import Decimal from \"decimal.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { tabs } from \"./constants/tabs\";\nimport { Inventory } from \"./containers/inventory\";\nimport {\n  addNumber,\n  clearClicked,\n  removeNumberByIndex,\n  setMoney,\n} from \"./slices/saveSlice\";\nimport { D } from \"./utils/decimal\";\nimport { useAppDispatch, useAppSelector } from \"./utils/hooks\";\n\nfunction Game() {\n  const dispatch = useAppDispatch();\n\n  const [curTab, setTab] = useState(0);\n\n  const inv = useAppSelector((state) => state.save.inventory);\n  const invMax = useAppSelector((state) => state.save.invMax);\n  const money = useAppSelector((state) => state.save.money);\n  const startingNumber = useAppSelector((state) => state.save.startingNumber);\n\n  const handleSellAll = useCallback(() => {\n    let moneyToAdd = D(\"0\");\n    for (let i = inv.length - 1; i > 0; i--) {\n      moneyToAdd = moneyToAdd.add(inv[i]);\n      dispatch(removeNumberByIndex(i));\n    }\n    dispatch(removeNumberByIndex(0));\n    dispatch(addNumber(startingNumber));\n    dispatch(setMoney(Decimal.add(money, moneyToAdd).toString()));\n  }, [dispatch, inv, money, startingNumber]);\n\n  // auto sell when inventory is full\n  const autoUpgrade = useAppSelector((state) => state.save.upgrade[3]);\n  useEffect(() => {\n    if (autoUpgrade !== 1) return;\n    if (inv.length === invMax) {\n      handleSellAll();\n    }\n  }, [inv, invMax, handleSellAll, autoUpgrade]);\n\n  const tabNavs = (\n    <div id=\"tabNavs\">\n      {tabs.map((v, i) => (\n        <span\n          className={`tabNav ${i === curTab ? \"selected\" : \"\"}`}\n          onClick={() => setTab(i)}\n          key={i}>\n          {v.name}\n        </span>\n      ))}\n    </div>\n  );\n\n  const Abc = tabs[curTab].tab;\n\n  const _handleKeyDown = (event: KeyboardEvent) => {\n    switch (event.key) {\n      case \"Esc\":\n      case \"Escape\":\n        dispatch(clearClicked());\n        break;\n      default:\n        return;\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", _handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", _handleKeyDown);\n    };\n  });\n\n  return (\n    <div className=\"App\">\n      {tabNavs}\n      <Abc />\n      <Inventory />\n      <div id=\"bottomBar\">\n        <button onClick={handleSellAll}>\n          <h2>Sell All</h2>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","// From https://github.com/spotky1004/Bunch-of-Achievements/blob/main/src/util/SaveLoad.js\n\nexport function mergeObject(target: any, source: any) {\n  target = target ?? {};\n  for (const i in source) {\n    if (Array.isArray(source[i])) {\n      target[i] = target[i] ?? [];\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\nexport function mergeArray(target: Array<any>, source: Array<any>) {\n  for (let i = 0, l = source.length; i < l; i++) {\n    if (Array.isArray(source[i])) {\n      mergeArray(target[i], source[i]);\n    } else if (typeof source[i] === \"object\") {\n      target[i] = mergeObject(target[i], source[i]);\n    } else {\n      target[i] = source[i].constructor(target[i] ?? source[i]);\n    }\n  }\n  return target;\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport saveReducer, {\n  initialState as saveInitialState,\n} from \"./slices/saveSlice\";\nimport { mergeObject } from \"./utils/merge\";\n\nconst persistedState = JSON.parse(\n  localStorage.getItem(\"notAMergeGame\") || \"{}\"\n);\n\nconst store = configureStore({\n  reducer: {\n    save: saveReducer,\n  },\n  preloadedState: mergeObject(persistedState, { save: saveInitialState }),\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\"notAMergeGame\", JSON.stringify(store.getState()));\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Game />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}